[assembly: System.Reflection.AssemblyMetadata("RepositoryUrl", "https://github.com/AxonIQ/axonserver-connector-dotnet")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("AxonIQ.AxonClusterIntegrationTests")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("AxonIQ.AxonServer.Connector.Tests")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("AxonIQ.AxonServerIntegrationTests")]
[assembly: System.Runtime.Versioning.TargetFramework(".NETCoreApp,Version=v6.0", FrameworkDisplayName="")]
namespace AxonIQ.AxonServer.Connector
{
    public readonly struct AggregateId
    {
        public AggregateId(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.AggregateId other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
    }
    public static class AxonServerAuthentication
    {
        public static readonly AxonIQ.AxonServer.Connector.IAxonServerAuthentication None;
        public static AxonIQ.AxonServer.Connector.IAxonServerAuthentication UsingToken(string token) { }
    }
    public class AxonServerConnectionFactory : System.IAsyncDisposable
    {
        public AxonServerConnectionFactory(AxonIQ.AxonServer.Connector.AxonServerConnectionFactoryOptions options) { }
        public System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.IAxonServerConnection> ConnectAsync(AxonIQ.AxonServer.Connector.Context context, System.Threading.CancellationToken ct = default) { }
        public System.Threading.Tasks.ValueTask DisposeAsync() { }
    }
    public static class AxonServerConnectionFactoryConfiguration
    {
        public const string ClientInstanceId = "ClientInstanceId";
        public const string ComponentName = "ComponentName";
        public const string DefaultSection = "AxonIQ";
        public const string RoutingServers = "RoutingServers";
    }
    public static class AxonServerConnectionFactoryDefaults
    {
        public static readonly AxonIQ.AxonServer.Connector.IAxonServerAuthentication Authentication;
        public static readonly System.Collections.Generic.IReadOnlyDictionary<string, string> ClientTags;
        public static readonly AxonIQ.AxonServer.Connector.PermitCount DefaultCommandPermits;
        public static readonly System.TimeSpan DefaultEventProcessorUpdateFrequency;
        public static readonly AxonIQ.AxonServer.Connector.PermitCount DefaultQueryPermits;
        public static readonly AxonIQ.AxonServer.Connector.ReconnectOptions DefaultReconnectOptions;
        public static readonly AxonIQ.AxonServer.Connector.PermitCount MinimumCommandPermits;
        public static readonly AxonIQ.AxonServer.Connector.PermitCount MinimumQueryPermits;
        public static readonly int Port;
        public static readonly System.Collections.Generic.IReadOnlyCollection<System.Net.DnsEndPoint> RoutingServers;
    }
    public class AxonServerConnectionFactoryOptions
    {
        public AxonIQ.AxonServer.Connector.IAxonServerAuthentication Authentication { get; }
        public AxonIQ.AxonServer.Connector.ClientInstanceId ClientInstanceId { get; }
        public System.Collections.Generic.IReadOnlyDictionary<string, string> ClientTags { get; }
        public System.Func<System.DateTimeOffset> Clock { get; }
        public AxonIQ.AxonServer.Connector.PermitCount CommandPermits { get; }
        public AxonIQ.AxonServer.Connector.ComponentName ComponentName { get; }
        public System.TimeSpan EventProcessorUpdateFrequency { get; }
        public Grpc.Net.Client.GrpcChannelOptions? GrpcChannelOptions { get; }
        public System.Collections.Generic.IReadOnlyList<Grpc.Core.Interceptors.Interceptor> Interceptors { get; }
        public Microsoft.Extensions.Logging.ILoggerFactory LoggerFactory { get; }
        public AxonIQ.AxonServer.Connector.PermitCount QueryPermits { get; }
        public AxonIQ.AxonServer.Connector.ReconnectOptions ReconnectOptions { get; }
        public System.Collections.Generic.IReadOnlyList<System.Net.DnsEndPoint> RoutingServers { get; }
        public static AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder For(AxonIQ.AxonServer.Connector.ComponentName componentName) { }
        public static AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder For(AxonIQ.AxonServer.Connector.ComponentName componentName, AxonIQ.AxonServer.Connector.ClientInstanceId clientInstanceId) { }
        public static AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder FromConfiguration(Microsoft.Extensions.Configuration.IConfiguration configuration) { }
    }
    public static class AxonServerConnectionHeaders
    {
        public const string AccessToken = "AxonIQ-Access-Token";
        public const string Context = "AxonIQ-Context";
    }
    public class AxonServerException : System.Exception
    {
        public AxonServerException(AxonIQ.AxonServer.Connector.ClientIdentity clientIdentity, AxonIQ.AxonServer.Connector.ErrorCategory errorCategory, string message) { }
        public AxonServerException(AxonIQ.AxonServer.Connector.ClientIdentity clientIdentity, AxonIQ.AxonServer.Connector.ErrorCategory errorCategory, string message, System.Exception innerException) { }
        public AxonServerException(AxonIQ.AxonServer.Connector.ClientIdentity clientIdentity, AxonIQ.AxonServer.Connector.ErrorCategory errorCategory, string message, string location) { }
        public AxonServerException(AxonIQ.AxonServer.Connector.ClientIdentity clientIdentity, AxonIQ.AxonServer.Connector.ErrorCategory errorCategory, string message, string location, System.Collections.Generic.IReadOnlyCollection<string> details) { }
        public AxonServerException(AxonIQ.AxonServer.Connector.ClientIdentity clientIdentity, AxonIQ.AxonServer.Connector.ErrorCategory errorCategory, string message, string location, System.Exception innerException) { }
        public AxonServerException(AxonIQ.AxonServer.Connector.ClientIdentity clientIdentity, AxonIQ.AxonServer.Connector.ErrorCategory errorCategory, string message, string location, System.Collections.Generic.IReadOnlyCollection<string> details, System.Exception innerException) { }
        public AxonIQ.AxonServer.Connector.ClientIdentity ClientIdentity { get; }
        public System.Collections.Generic.IReadOnlyCollection<string> Details { get; }
        public AxonIQ.AxonServer.Connector.ErrorCategory ErrorCategory { get; }
        public string Location { get; }
    }
    public class ClientIdentity : System.IEquatable<AxonIQ.AxonServer.Connector.ClientIdentity>
    {
        public ClientIdentity(AxonIQ.AxonServer.Connector.ComponentName ComponentName, AxonIQ.AxonServer.Connector.ClientInstanceId ClientInstanceId, System.Collections.Generic.IReadOnlyDictionary<string, string> ClientTags, System.Version Version) { }
        public AxonIQ.AxonServer.Connector.ClientInstanceId ClientInstanceId { get; init; }
        public System.Collections.Generic.IReadOnlyDictionary<string, string> ClientTags { get; init; }
        public AxonIQ.AxonServer.Connector.ComponentName ComponentName { get; init; }
        public System.Version Version { get; init; }
    }
    public readonly struct ClientInstanceId
    {
        public ClientInstanceId(string value) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public static AxonIQ.AxonServer.Connector.ClientInstanceId GenerateFrom(AxonIQ.AxonServer.Connector.ComponentName component) { }
    }
    public readonly struct CommandName
    {
        public CommandName(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.CommandName other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
    }
    public readonly struct ComponentName
    {
        public static readonly AxonIQ.AxonServer.Connector.ComponentName Default;
        public ComponentName(string value) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public AxonIQ.AxonServer.Connector.ComponentName PrefixWith(AxonIQ.AxonServer.Connector.ComponentName prefix) { }
        public AxonIQ.AxonServer.Connector.ComponentName PrefixWith(string prefix) { }
        public AxonIQ.AxonServer.Connector.ComponentName SuffixWith(AxonIQ.AxonServer.Connector.ComponentName suffix) { }
        public AxonIQ.AxonServer.Connector.ComponentName SuffixWith(string suffix) { }
        public override string ToString() { }
        public static AxonIQ.AxonServer.Connector.ComponentName GenerateRandomName() { }
    }
    public readonly struct Context : System.IEquatable<AxonIQ.AxonServer.Connector.Context>
    {
        public static readonly AxonIQ.AxonServer.Connector.Context Admin;
        public static readonly AxonIQ.AxonServer.Connector.Context Default;
        public Context(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.Context other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public void WriteTo(Grpc.Core.Metadata metadata) { }
    }
    public static class DateTimeOffsetMath
    {
        public static System.DateTimeOffset Max(System.DateTimeOffset left, System.DateTimeOffset right) { }
        public static System.DateTimeOffset Min(System.DateTimeOffset left, System.DateTimeOffset right) { }
    }
    public class ErrorCategory
    {
        public static readonly System.Collections.Generic.IReadOnlyList<AxonIQ.AxonServer.Connector.ErrorCategory> All;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory AuthenticationInvalidToken;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory AuthenticationTokenMissing;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory CommandDispatchError;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory CommandExecutionError;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory ConcurrencyException;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory ConnectionFailed;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory DatafileReadError;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory DatafileWriteError;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory DirectoryCreationFailed;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory EventPayloadTooLarge;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory GrpcMessageTooLarge;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory IndexReadError;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory IndexWriteError;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory InstructionAckError;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory InstructionExecutionError;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory InvalidEventSequence;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory NoEventStoreMasterAvailable;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory NoHandlerForCommand;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory NoHandlerForQuery;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory Other;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory QueryDispatchError;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory QueryExecutionError;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory TransactionRolledBack;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory UnsupportedInstruction;
        public static readonly AxonIQ.AxonServer.Connector.ErrorCategory ValidationFailed;
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public static AxonIQ.AxonServer.Connector.ErrorCategory Parse(string errorCode) { }
    }
    public static class EventChannelExtensions
    {
        public static System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Event.Confirmation> AppendEvents(this AxonIQ.AxonServer.Connector.IEventChannel channel, params Io.Axoniq.Axonserver.Grpc.Event.Event[] events) { }
    }
    public readonly struct EventProcessorName
    {
        public EventProcessorName(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.EventProcessorName other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
    }
    public static class EventQueryResultEntryExtensions
    {
        public static bool GetValueAsBoolean(this AxonIQ.AxonServer.Connector.IEventQueryResultEntry entry, string column) { }
        public static double GetValueAsDouble(this AxonIQ.AxonServer.Connector.IEventQueryResultEntry entry, string column) { }
        public static long GetValueAsInt64(this AxonIQ.AxonServer.Connector.IEventQueryResultEntry entry, string column) { }
        public static bool? GetValueAsNullableBoolean(this AxonIQ.AxonServer.Connector.IEventQueryResultEntry entry, string column) { }
        public static double? GetValueAsNullableDouble(this AxonIQ.AxonServer.Connector.IEventQueryResultEntry entry, string column) { }
        public static long? GetValueAsNullableInt64(this AxonIQ.AxonServer.Connector.IEventQueryResultEntry entry, string column) { }
        public static string? GetValueAsNullableString(this AxonIQ.AxonServer.Connector.IEventQueryResultEntry entry, string column) { }
        public static string GetValueAsString(this AxonIQ.AxonServer.Connector.IEventQueryResultEntry entry, string column) { }
    }
    public readonly struct EventSequenceNumber
    {
        public EventSequenceNumber(long value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.EventSequenceNumber other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public long ToInt64() { }
    }
    public readonly struct EventStreamToken : System.IEquatable<AxonIQ.AxonServer.Connector.EventStreamToken>
    {
        public static readonly AxonIQ.AxonServer.Connector.EventStreamToken None;
        public EventStreamToken(long value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.EventStreamToken other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public long ToInt64() { }
        public override string ToString() { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.EventStreamToken left, AxonIQ.AxonServer.Connector.EventStreamToken right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.EventStreamToken left, AxonIQ.AxonServer.Connector.EventStreamToken right) { }
    }
    public delegate System.Threading.Tasks.ValueTask HeartbeatMissed();
    public interface IAdminChannel
    {
        System.Threading.Tasks.Task AddNodeToReplicationGroupAsync(Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup request);
        System.Threading.Tasks.Task CreateContextAsync(Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest request);
        System.Threading.Tasks.Task CreateOrUpdateApplicationAsync(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest request);
        System.Threading.Tasks.Task CreateOrUpdateUserAsync(Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest request);
        System.Threading.Tasks.Task CreateReplicationGroupAsync(Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest request);
        System.Threading.Tasks.Task DeleteApplicationAsync(string applicationName);
        System.Threading.Tasks.Task DeleteContextAsync(Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest request);
        System.Threading.Tasks.Task DeleteReplicationGroupAsync(Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest request);
        System.Threading.Tasks.Task DeleteUserAsync(string username);
        System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview>> GetAllApplicationsAsync();
        System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview>> GetAllContextsAsync();
        System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview>> GetAllNodesAsync();
        System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview>> GetAllReplicationGroupsAsync();
        System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<Io.Axoniq.Axonserver.Grpc.Admin.UserOverview>> GetAllUsersAsync();
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview> GetApplicationAsync(string applicationName);
        System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy>> GetBalancingStrategiesAsync();
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview> GetContextOverviewAsync(string context);
        System.Collections.Generic.IAsyncEnumerable<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor> GetEventProcessors();
        System.Collections.Generic.IAsyncEnumerable<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor> GetEventProcessorsByComponent(AxonIQ.AxonServer.Connector.ComponentName component);
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview> GetReplicationGroupAsync(string replicationGroup);
        System.Threading.Tasks.Task LoadBalanceEventProcessorAsync(AxonIQ.AxonServer.Connector.EventProcessorName name, AxonIQ.AxonServer.Connector.TokenStoreIdentifier identifier, string strategy);
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Admin.Result> MergeEventProcessorAsync(AxonIQ.AxonServer.Connector.EventProcessorName name, AxonIQ.AxonServer.Connector.TokenStoreIdentifier identifier);
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Admin.Result> MoveEventProcessorSegmentAsync(AxonIQ.AxonServer.Connector.EventProcessorName name, AxonIQ.AxonServer.Connector.TokenStoreIdentifier identifier, AxonIQ.AxonServer.Connector.SegmentId segmentId, AxonIQ.AxonServer.Connector.ClientInstanceId targetClient);
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Admin.Result> PauseEventProcessorAsync(AxonIQ.AxonServer.Connector.EventProcessorName name, AxonIQ.AxonServer.Connector.TokenStoreIdentifier identifier);
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Admin.Token> RefreshTokenAsync(string applicationName);
        System.Threading.Tasks.Task RemoveNodeFromReplicationGroupAsync(Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup request);
        System.Threading.Tasks.Task SetAutoLoadBalanceStrategyAsync(AxonIQ.AxonServer.Connector.EventProcessorName name, AxonIQ.AxonServer.Connector.TokenStoreIdentifier identifier, string strategy);
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Admin.Result> SplitEventProcessorAsync(AxonIQ.AxonServer.Connector.EventProcessorName name, AxonIQ.AxonServer.Connector.TokenStoreIdentifier identifier);
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Admin.Result> StartEventProcessorAsync(AxonIQ.AxonServer.Connector.EventProcessorName name, AxonIQ.AxonServer.Connector.TokenStoreIdentifier identifier);
        System.Collections.Generic.IAsyncEnumerable<Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate> SubscribeToContextUpdates();
        System.Threading.Tasks.Task UpdateContextPropertiesAsync(Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest request);
    }
    public interface IAggregateEventStream : System.Collections.Generic.IAsyncEnumerable<Io.Axoniq.Axonserver.Grpc.Event.Event>, System.IDisposable { }
    public interface IAppendEventsTransaction : System.IDisposable
    {
        System.Threading.Tasks.Task AppendEventAsync(Io.Axoniq.Axonserver.Grpc.Event.Event @event);
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Event.Confirmation> CommitAsync();
        System.Threading.Tasks.Task RollbackAsync();
    }
    public interface IAxonServerAuthentication
    {
        void WriteTo(Grpc.Core.Metadata metadata);
    }
    public interface IAxonServerConnection : System.IAsyncDisposable
    {
        AxonIQ.AxonServer.Connector.IAdminChannel AdminChannel { get; }
        AxonIQ.AxonServer.Connector.ClientIdentity ClientIdentity { get; }
        AxonIQ.AxonServer.Connector.ICommandChannel CommandChannel { get; }
        AxonIQ.AxonServer.Connector.Context Context { get; }
        AxonIQ.AxonServer.Connector.IControlChannel ControlChannel { get; }
        AxonIQ.AxonServer.Connector.IEventChannel EventChannel { get; }
        bool IsClosed { get; }
        bool IsConnected { get; }
        bool IsReady { get; }
        AxonIQ.AxonServer.Connector.IQueryChannel QueryChannel { get; }
        System.Threading.Tasks.Task CloseAsync();
        System.Threading.Tasks.Task WaitUntilConnectedAsync();
        System.Threading.Tasks.Task WaitUntilConnectedAsync(System.TimeSpan timeout);
        System.Threading.Tasks.Task WaitUntilReadyAsync();
        System.Threading.Tasks.Task WaitUntilReadyAsync(System.TimeSpan timeout);
    }
    public interface IAxonServerConnectionFactoryOptionsBuilder
    {
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder AsClientInstanceId(AxonIQ.AxonServer.Connector.ClientInstanceId id);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder AsComponentName(AxonIQ.AxonServer.Connector.ComponentName name);
        AxonIQ.AxonServer.Connector.AxonServerConnectionFactoryOptions Build();
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithAuthenticationToken(string token);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithClientTag(string key, string value);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithClientTags(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>> tags);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithClientTags(params System.Collections.Generic.KeyValuePair<string, string>[] tags);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithClock(System.Func<System.DateTimeOffset> clock);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithCommandPermits(AxonIQ.AxonServer.Connector.PermitCount count);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithDefaultRoutingServers();
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithEventProcessorUpdateFrequency(System.TimeSpan frequency);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithGrpcChannelOptions(Grpc.Net.Client.GrpcChannelOptions grpcChannelOptions);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithInterceptors(params Grpc.Core.Interceptors.Interceptor[] interceptors);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithQueryPermits(AxonIQ.AxonServer.Connector.PermitCount count);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithReconnectOptions(AxonIQ.AxonServer.Connector.ReconnectOptions options);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithRoutingServers(System.Collections.Generic.IEnumerable<System.Net.DnsEndPoint> servers);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithRoutingServers(params System.Net.DnsEndPoint[] servers);
        AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder WithoutAuthentication();
    }
    public interface ICommandChannel
    {
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.ICommandHandlerRegistration> RegisterCommandHandlerAsync(System.Func<Io.Axoniq.Axonserver.Grpc.Command.Command, System.Threading.CancellationToken, System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Command.CommandResponse>> handler, AxonIQ.AxonServer.Connector.LoadFactor loadFactor, params AxonIQ.AxonServer.Connector.CommandName[] commandNames);
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Command.CommandResponse> SendCommandAsync(Io.Axoniq.Axonserver.Grpc.Command.Command command, System.Threading.CancellationToken ct);
    }
    public interface ICommandHandlerRegistration : System.IAsyncDisposable
    {
        System.Threading.Tasks.Task WaitUntilCompletedAsync();
    }
    public interface IControlChannel
    {
        System.Threading.Tasks.Task DisableHeartbeatAsync();
        System.Threading.Tasks.Task EnableHeartbeatAsync(System.TimeSpan interval, System.TimeSpan timeout);
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.IEventProcessorRegistration> RegisterEventProcessorAsync(AxonIQ.AxonServer.Connector.EventProcessorName name, System.Func<System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo?>> supplier, AxonIQ.AxonServer.Connector.IEventProcessorInstructionHandler handler);
        System.Threading.Tasks.Task SendInstructionAsync(Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction instruction);
    }
    public interface IEventChannel
    {
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Event.Confirmation> AppendSnapshotAsync(Io.Axoniq.Axonserver.Grpc.Event.Event snapshot);
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.InstructionAck> CancelScheduleAsync(AxonIQ.AxonServer.Connector.ScheduledEventCancellationToken token);
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.EventSequenceNumber> FindHighestSequenceAsync(AxonIQ.AxonServer.Connector.AggregateId id);
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.EventStreamToken> GetFirstTokenAsync();
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.EventStreamToken> GetLastTokenAsync();
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.EventStreamToken> GetTokenAtAsync(long instant);
        AxonIQ.AxonServer.Connector.IAggregateEventStream LoadSnapshots(AxonIQ.AxonServer.Connector.AggregateId id, AxonIQ.AxonServer.Connector.EventSequenceNumber? from = default, AxonIQ.AxonServer.Connector.EventSequenceNumber? to = default, int maxResults = 1);
        AxonIQ.AxonServer.Connector.IAggregateEventStream OpenStream(AxonIQ.AxonServer.Connector.AggregateId id, bool allowSnapshots = true);
        AxonIQ.AxonServer.Connector.IAggregateEventStream OpenStream(AxonIQ.AxonServer.Connector.AggregateId id, AxonIQ.AxonServer.Connector.EventSequenceNumber from, AxonIQ.AxonServer.Connector.EventSequenceNumber? to = default);
        AxonIQ.AxonServer.Connector.IEventStream OpenStream(AxonIQ.AxonServer.Connector.EventStreamToken token, AxonIQ.AxonServer.Connector.PermitCount bufferSize, AxonIQ.AxonServer.Connector.PermitCount? refillBatch = default, bool forceReadFromLeader = false);
        System.Collections.Generic.IAsyncEnumerable<AxonIQ.AxonServer.Connector.IEventQueryResultEntry> QueryEvents(string expression, bool liveStream);
        System.Collections.Generic.IAsyncEnumerable<AxonIQ.AxonServer.Connector.IEventQueryResultEntry> QuerySnapshotEvents(string expression, bool liveStream);
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.ScheduledEventCancellationToken> RescheduleAsync(AxonIQ.AxonServer.Connector.ScheduledEventCancellationToken token, Google.Protobuf.WellKnownTypes.Duration duration, Io.Axoniq.Axonserver.Grpc.Event.Event @event);
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.ScheduledEventCancellationToken> RescheduleAsync(AxonIQ.AxonServer.Connector.ScheduledEventCancellationToken token, System.DateTimeOffset instant, Io.Axoniq.Axonserver.Grpc.Event.Event @event);
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.ScheduledEventCancellationToken> ScheduleEventAsync(Google.Protobuf.WellKnownTypes.Duration duration, Io.Axoniq.Axonserver.Grpc.Event.Event @event);
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.ScheduledEventCancellationToken> ScheduleEventAsync(System.DateTimeOffset instant, Io.Axoniq.Axonserver.Grpc.Event.Event @event);
        AxonIQ.AxonServer.Connector.IAppendEventsTransaction StartAppendEventsTransaction();
    }
    public interface IEventProcessorInstructionHandler
    {
        System.Threading.Tasks.Task<bool> MergeSegmentAsync(AxonIQ.AxonServer.Connector.SegmentId segment);
        System.Threading.Tasks.Task PauseAsync();
        System.Threading.Tasks.Task<bool> ReleaseSegmentAsync(AxonIQ.AxonServer.Connector.SegmentId segment);
        System.Threading.Tasks.Task<bool> SplitSegmentAsync(AxonIQ.AxonServer.Connector.SegmentId segment);
        System.Threading.Tasks.Task StartAsync();
    }
    public interface IEventProcessorRegistration : System.IAsyncDisposable
    {
        System.Threading.Tasks.Task WaitUntilCompletedAsync();
    }
    public interface IEventQueryResultEntry
    {
        System.Collections.Generic.IReadOnlyCollection<string> Columns { get; }
        System.Collections.Generic.IReadOnlyCollection<object?> Identifiers { get; }
        System.Collections.Generic.IReadOnlyCollection<object?> SortValues { get; }
        T? GetValueAsNullable<T>(string column);
        T GetValueOrDefaultAs<T>(string column, T? defaultValue = default);
    }
    public interface IEventStream : System.Collections.Generic.IAsyncEnumerable<Io.Axoniq.Axonserver.Grpc.Event.EventWithToken>, System.IDisposable
    {
        System.Threading.Tasks.Task ExcludePayloadTypeAsync(string payloadType, string? revision);
    }
    public interface IQueryChannel
    {
        System.Collections.Generic.IAsyncEnumerable<Io.Axoniq.Axonserver.Grpc.Query.QueryResponse> Query(Io.Axoniq.Axonserver.Grpc.Query.QueryRequest query, System.Threading.CancellationToken ct);
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.IQueryHandlerRegistration> RegisterQueryHandlerAsync(AxonIQ.AxonServer.Connector.IQueryHandler handler, params AxonIQ.AxonServer.Connector.QueryDefinition[] queries);
        System.Threading.Tasks.Task<AxonIQ.AxonServer.Connector.IQuerySubscriptionResult> SubscriptionQueryAsync(Io.Axoniq.Axonserver.Grpc.Query.QueryRequest query, Io.Axoniq.Axonserver.Grpc.SerializedObject updateType, AxonIQ.AxonServer.Connector.PermitCount bufferSize, AxonIQ.AxonServer.Connector.PermitCount fetchSize, System.Threading.CancellationToken ct);
    }
    public interface IQueryHandler
    {
        System.Threading.Tasks.Task HandleAsync(Io.Axoniq.Axonserver.Grpc.Query.QueryRequest request, AxonIQ.AxonServer.Connector.IQueryResponseChannel responseChannel);
        AxonIQ.AxonServer.Connector.ISubscriptionQueryRegistration? RegisterSubscriptionQuery(Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery query, AxonIQ.AxonServer.Connector.ISubscriptionQueryUpdateResponseChannel responseChannel);
    }
    public interface IQueryHandlerRegistration : System.IAsyncDisposable
    {
        System.Threading.Tasks.Task WaitUntilCompletedAsync();
    }
    public interface IQueryResponseChannel
    {
        System.Threading.Tasks.ValueTask CompleteAsync();
        System.Threading.Tasks.ValueTask CompleteWithErrorAsync(Io.Axoniq.Axonserver.Grpc.ErrorMessage errorMessage);
        System.Threading.Tasks.ValueTask CompleteWithErrorAsync(AxonIQ.AxonServer.Connector.ErrorCategory errorCategory, Io.Axoniq.Axonserver.Grpc.ErrorMessage errorMessage);
        System.Threading.Tasks.ValueTask SendAsync(Io.Axoniq.Axonserver.Grpc.Query.QueryResponse response);
        System.Threading.Tasks.ValueTask SendLastAsync(Io.Axoniq.Axonserver.Grpc.Query.QueryResponse response);
    }
    public interface IQuerySubscriptionResult : System.IAsyncDisposable
    {
        System.Threading.Tasks.Task<Io.Axoniq.Axonserver.Grpc.Query.QueryResponse> InitialResult { get; }
        System.Collections.Generic.IAsyncEnumerable<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate> Updates { get; }
    }
    public interface IScheduler : System.IAsyncDisposable
    {
        System.Func<System.DateTimeOffset> Clock { get; }
        System.Threading.Tasks.ValueTask ScheduleTaskAsync(System.Func<System.Threading.Tasks.ValueTask> task, System.TimeSpan due);
    }
    public interface ISubscriptionQueryRegistration : System.IAsyncDisposable
    {
        System.Threading.Tasks.Task WaitUntilCompletedAsync();
    }
    public interface ISubscriptionQueryUpdateResponseChannel
    {
        System.Threading.Tasks.ValueTask CompleteAsync();
        System.Threading.Tasks.ValueTask SendUpdateAsync(Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate update);
    }
    public readonly struct InstructionId
    {
        public bool Equals(AxonIQ.AxonServer.Connector.InstructionId other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public static bool CanParse(string value) { }
        public static AxonIQ.AxonServer.Connector.InstructionId New() { }
        public static AxonIQ.AxonServer.Connector.InstructionId Parse(string value) { }
        public static bool TryParse(string value, out AxonIQ.AxonServer.Connector.InstructionId parsed) { }
    }
    public struct LoadFactor : System.IEquatable<AxonIQ.AxonServer.Connector.LoadFactor>
    {
        public LoadFactor(int value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.LoadFactor other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public int ToInt32() { }
        public override string ToString() { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.LoadFactor left, AxonIQ.AxonServer.Connector.LoadFactor right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.LoadFactor left, AxonIQ.AxonServer.Connector.LoadFactor right) { }
    }
    public readonly struct PermitCount : System.IComparable<AxonIQ.AxonServer.Connector.PermitCount>, System.IComparable<AxonIQ.AxonServer.Connector.PermitCounter>, System.IEquatable<AxonIQ.AxonServer.Connector.PermitCount>, System.IEquatable<AxonIQ.AxonServer.Connector.PermitCounter>
    {
        public PermitCount(long value) { }
        public int CompareTo(AxonIQ.AxonServer.Connector.PermitCount other) { }
        public int CompareTo(AxonIQ.AxonServer.Connector.PermitCounter other) { }
        public bool Equals(AxonIQ.AxonServer.Connector.PermitCount other) { }
        public bool Equals(AxonIQ.AxonServer.Connector.PermitCounter other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public long ToInt64() { }
        public override string ToString() { }
        public static AxonIQ.AxonServer.Connector.PermitCount Max(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCount right) { }
        public static AxonIQ.AxonServer.Connector.PermitCount Min(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCount right) { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCount right) { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
        public static bool operator <(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCount right) { }
        public static bool operator <(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
        public static bool operator <=(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCount right) { }
        public static bool operator <=(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCount right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
        public static bool operator >(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCount right) { }
        public static bool operator >(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
        public static bool operator >=(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCount right) { }
        public static bool operator >=(AxonIQ.AxonServer.Connector.PermitCount left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
    }
    public readonly struct PermitCounter : System.IComparable<AxonIQ.AxonServer.Connector.PermitCounter>, System.IEquatable<AxonIQ.AxonServer.Connector.PermitCounter>
    {
        public static readonly AxonIQ.AxonServer.Connector.PermitCounter Zero;
        public PermitCounter(long value) { }
        public int CompareTo(AxonIQ.AxonServer.Connector.PermitCounter other) { }
        public bool Equals(AxonIQ.AxonServer.Connector.PermitCounter other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public AxonIQ.AxonServer.Connector.PermitCounter Increment() { }
        public long ToInt64() { }
        public override string ToString() { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.PermitCounter left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
        public static bool operator <(AxonIQ.AxonServer.Connector.PermitCounter left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
        public static bool operator <=(AxonIQ.AxonServer.Connector.PermitCounter left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.PermitCounter left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
        public static bool operator >(AxonIQ.AxonServer.Connector.PermitCounter left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
        public static bool operator >=(AxonIQ.AxonServer.Connector.PermitCounter left, AxonIQ.AxonServer.Connector.PermitCounter right) { }
    }
    public class QueryDefinition : System.IEquatable<AxonIQ.AxonServer.Connector.QueryDefinition>
    {
        public QueryDefinition(AxonIQ.AxonServer.Connector.QueryName QueryName, string ResultType) { }
        public AxonIQ.AxonServer.Connector.QueryName QueryName { get; init; }
        public string ResultType { get; init; }
    }
    public readonly struct QueryHandlerId
    {
        public QueryHandlerId(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.QueryHandlerId other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public static AxonIQ.AxonServer.Connector.QueryHandlerId New() { }
    }
    public readonly struct QueryName
    {
        public QueryName(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.QueryName other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
    }
    public delegate System.Threading.Tasks.ValueTask ReceiveHeartbeatAcknowledgement(Io.Axoniq.Axonserver.Grpc.InstructionAck message);
    public class ReconnectOptions : System.IEquatable<AxonIQ.AxonServer.Connector.ReconnectOptions>
    {
        public ReconnectOptions(System.TimeSpan connectionTimeout, System.TimeSpan reconnectInterval, bool forcePlatformReconnect) { }
        public System.TimeSpan ConnectionTimeout { get; }
        public bool ForcePlatformReconnect { get; }
        public System.TimeSpan ReconnectInterval { get; }
        public bool Equals(AxonIQ.AxonServer.Connector.ReconnectOptions? other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.ReconnectOptions? left, AxonIQ.AxonServer.Connector.ReconnectOptions? right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.ReconnectOptions? left, AxonIQ.AxonServer.Connector.ReconnectOptions? right) { }
    }
    public readonly struct RegisteredCommandId : System.IEquatable<AxonIQ.AxonServer.Connector.RegisteredCommandId>
    {
        public bool Equals(AxonIQ.AxonServer.Connector.RegisteredCommandId other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public static AxonIQ.AxonServer.Connector.RegisteredCommandId New() { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.RegisteredCommandId left, AxonIQ.AxonServer.Connector.RegisteredCommandId right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.RegisteredCommandId left, AxonIQ.AxonServer.Connector.RegisteredCommandId right) { }
    }
    public readonly struct RegistrationId
    {
        public RegistrationId(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.RegistrationId other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public static AxonIQ.AxonServer.Connector.RegistrationId New() { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.RegistrationId left, AxonIQ.AxonServer.Connector.RegistrationId right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.RegistrationId left, AxonIQ.AxonServer.Connector.RegistrationId right) { }
    }
    public delegate System.Threading.Tasks.ValueTask RequestReconnect();
    public readonly struct ScheduledEventCancellationToken : System.IEquatable<AxonIQ.AxonServer.Connector.ScheduledEventCancellationToken>
    {
        public ScheduledEventCancellationToken(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.ScheduledEventCancellationToken other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
    }
    public readonly struct SegmentId
    {
        public SegmentId(int value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.SegmentId other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public int ToInt32() { }
        public override string ToString() { }
    }
    public delegate System.Threading.Tasks.ValueTask SendHeartbeat(AxonIQ.AxonServer.Connector.ReceiveHeartbeatAcknowledgement responder, System.TimeSpan timeout);
    public static class ServiceCollectionExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddAxonServerConnectionFactory(this Microsoft.Extensions.DependencyInjection.IServiceCollection services) { }
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddAxonServerConnectionFactory(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, AxonIQ.AxonServer.Connector.AxonServerConnectionFactoryOptions options) { }
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddAxonServerConnectionFactory(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfiguration configuration) { }
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddAxonServerConnectionFactory(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<AxonIQ.AxonServer.Connector.IAxonServerConnectionFactoryOptionsBuilder> configure) { }
    }
    public readonly struct SubscriptionId
    {
        public SubscriptionId(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.SubscriptionId other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public static AxonIQ.AxonServer.Connector.SubscriptionId New() { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.SubscriptionId left, AxonIQ.AxonServer.Connector.SubscriptionId right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.SubscriptionId left, AxonIQ.AxonServer.Connector.SubscriptionId right) { }
    }
    public readonly struct SubscriptionIdentifier
    {
        public SubscriptionIdentifier(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.SubscriptionIdentifier other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public static AxonIQ.AxonServer.Connector.SubscriptionIdentifier New() { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.SubscriptionIdentifier left, AxonIQ.AxonServer.Connector.SubscriptionIdentifier right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.SubscriptionIdentifier left, AxonIQ.AxonServer.Connector.SubscriptionIdentifier right) { }
    }
    public static class TimeSpanMath
    {
        public static System.TimeSpan Max(System.TimeSpan left, System.TimeSpan right) { }
        public static System.TimeSpan Min(System.TimeSpan left, System.TimeSpan right) { }
    }
    public readonly struct TokenStoreIdentifier : System.IEquatable<AxonIQ.AxonServer.Connector.TokenStoreIdentifier>
    {
        public static readonly AxonIQ.AxonServer.Connector.TokenStoreIdentifier Empty;
        public TokenStoreIdentifier(string value) { }
        public bool Equals(AxonIQ.AxonServer.Connector.TokenStoreIdentifier other) { }
        public override bool Equals(object? obj) { }
        public override int GetHashCode() { }
        public override string ToString() { }
        public static bool operator !=(AxonIQ.AxonServer.Connector.TokenStoreIdentifier left, AxonIQ.AxonServer.Connector.TokenStoreIdentifier right) { }
        public static bool operator ==(AxonIQ.AxonServer.Connector.TokenStoreIdentifier left, AxonIQ.AxonServer.Connector.TokenStoreIdentifier right) { }
    }
    public static class TraceProviderBuilderExtensions
    {
        public static OpenTelemetry.Trace.TracerProviderBuilder AddAxonServerConnectorInstrumentation(this OpenTelemetry.Trace.TracerProviderBuilder builder) { }
    }
    public delegate System.Threading.Tasks.ValueTask WriteCommandProviderOutbound(Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound instruction);
    public delegate System.Threading.Tasks.ValueTask WritePlatformInboundInstruction(Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction instruction);
    public delegate System.Threading.Tasks.ValueTask WriteQueryProviderOutbound(Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound instruction);
}
namespace Io.Axoniq.Axonserver.Grpc.Admin
{
    public sealed class AdminActionResult : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult>
    {
        public const int ResultFieldNumber = 1;
        public AdminActionResult() { }
        public AdminActionResult(Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult other) { }
        public Io.Axoniq.Axonserver.Grpc.Admin.Result Result { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class AdminReflection
    {
        public static Google.Protobuf.Reflection.FileDescriptor Descriptor { get; }
    }
    public static class ApplicationAdminService
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class ApplicationAdminServiceClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationAdminService.ApplicationAdminServiceClient>
        {
            protected ApplicationAdminServiceClient() { }
            public ApplicationAdminServiceClient(Grpc.Core.CallInvoker callInvoker) { }
            public ApplicationAdminServiceClient(Grpc.Core.ChannelBase channel) { }
            protected ApplicationAdminServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.Token CreateOrUpdateApplication(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.Token CreateOrUpdateApplication(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.Token> CreateOrUpdateApplicationAsync(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.Token> CreateOrUpdateApplicationAsync(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> DeleteApplication(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> DeleteApplication(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview GetApplication(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview GetApplication(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview> GetApplicationAsync(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview> GetApplicationAsync(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview> GetApplications(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview> GetApplications(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview GetConnectedApplicationsByContext(Io.Axoniq.Axonserver.Grpc.Admin.ContextId request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview GetConnectedApplicationsByContext(Io.Axoniq.Axonserver.Grpc.Admin.ContextId request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview> GetConnectedApplicationsByContextAsync(Io.Axoniq.Axonserver.Grpc.Admin.ContextId request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview> GetConnectedApplicationsByContextAsync(Io.Axoniq.Axonserver.Grpc.Admin.ContextId request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Admin.ApplicationAdminService.ApplicationAdminServiceClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.Token RefreshToken(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.Token RefreshToken(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.Token> RefreshTokenAsync(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.Token> RefreshTokenAsync(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
        }
    }
    public sealed class ApplicationContextRole : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationContextRole>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationContextRole>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationContextRole>
    {
        public const int ContextFieldNumber = 1;
        public const int RolesFieldNumber = 2;
        public ApplicationContextRole() { }
        public ApplicationContextRole(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationContextRole other) { }
        public string Context { get; set; }
        public Google.Protobuf.Collections.RepeatedField<string> Roles { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationContextRole> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ApplicationContextRole Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationContextRole other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationContextRole other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ApplicationId : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId>
    {
        public const int ApplicationNameFieldNumber = 1;
        public ApplicationId() { }
        public ApplicationId(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId other) { }
        public string ApplicationName { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationId other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ApplicationOverview : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview>
    {
        public const int ApplicationNameFieldNumber = 1;
        public const int DescriptionFieldNumber = 2;
        public const int MetaDataFieldNumber = 4;
        public const int RolesPerContextFieldNumber = 3;
        public ApplicationOverview() { }
        public ApplicationOverview(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview other) { }
        public string ApplicationName { get; set; }
        public string Description { get; set; }
        public Google.Protobuf.Collections.MapField<string, string> MetaData { get; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationContextRole> RolesPerContext { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationOverview other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ApplicationRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest>
    {
        public const int ApplicationNameFieldNumber = 1;
        public const int DescriptionFieldNumber = 2;
        public const int MetaDataFieldNumber = 5;
        public const int RolesPerContextFieldNumber = 4;
        public const int TokenFieldNumber = 3;
        public ApplicationRequest() { }
        public ApplicationRequest(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest other) { }
        public string ApplicationName { get; set; }
        public string Description { get; set; }
        public Google.Protobuf.Collections.MapField<string, string> MetaData { get; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationContextRole> RolesPerContext { get; }
        public string Token { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ApplicationRoles : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles>
    {
        public const int ApplicationNameFieldNumber = 1;
        public const int ApplicationRoleFieldNumber = 2;
        public ApplicationRoles() { }
        public ApplicationRoles(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles other) { }
        public string ApplicationName { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.ContextRole> ApplicationRole { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class AuthenticateUserRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest>
    {
        public const int PasswordFieldNumber = 2;
        public const int UserNameFieldNumber = 1;
        public AuthenticateUserRequest() { }
        public AuthenticateUserRequest(Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest other) { }
        public string Password { get; set; }
        public string UserName { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class AuthenticationService
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class AuthenticationServiceClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Admin.AuthenticationService.AuthenticationServiceClient>
        {
            protected AuthenticationServiceClient() { }
            public AuthenticationServiceClient(Grpc.Core.CallInvoker callInvoker) { }
            public AuthenticationServiceClient(Grpc.Core.ChannelBase channel) { }
            protected AuthenticationServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles AuthenticateToken(Io.Axoniq.Axonserver.Grpc.Admin.Token request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles AuthenticateToken(Io.Axoniq.Axonserver.Grpc.Admin.Token request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles> AuthenticateTokenAsync(Io.Axoniq.Axonserver.Grpc.Admin.Token request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.ApplicationRoles> AuthenticateTokenAsync(Io.Axoniq.Axonserver.Grpc.Admin.Token request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.UserRoles AuthenticateUser(Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.UserRoles AuthenticateUser(Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.UserRoles> AuthenticateUserAsync(Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.UserRoles> AuthenticateUserAsync(Io.Axoniq.Axonserver.Grpc.Admin.AuthenticateUserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Admin.AuthenticationService.AuthenticationServiceClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
        }
    }
    public sealed class Client : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.Client>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.Client>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.Client>
    {
        public const int NameFieldNumber = 1;
        public const int NodeFieldNumber = 2;
        public const int ProcessorsFieldNumber = 3;
        public Client() { }
        public Client(Io.Axoniq.Axonserver.Grpc.Admin.Client other) { }
        public string Name { get; set; }
        public string Node { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo> Processors { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.Client> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.Client Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.Client other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.Client other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ClientApplication : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ClientApplication>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ClientApplication>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ClientApplication>
    {
        public const int ClientsFieldNumber = 2;
        public const int CommandsFieldNumber = 3;
        public const int NameFieldNumber = 1;
        public const int QueriesFieldNumber = 4;
        public ClientApplication() { }
        public ClientApplication(Io.Axoniq.Axonserver.Grpc.Admin.ClientApplication other) { }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.Client> Clients { get; }
        public Google.Protobuf.Collections.RepeatedField<string> Commands { get; }
        public string Name { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.QueryInfo> Queries { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ClientApplication> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ClientApplication Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ClientApplication other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ClientApplication other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ConnectedApplicationOverview : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview>
    {
        public const int ApplicationsFieldNumber = 2;
        public const int NodesFieldNumber = 1;
        public ConnectedApplicationOverview() { }
        public ConnectedApplicationOverview(Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview other) { }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.ClientApplication> Applications { get; }
        public Google.Protobuf.Collections.RepeatedField<string> Nodes { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ConnectedApplicationOverview other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class ContextAdminService
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class ContextAdminServiceClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Admin.ContextAdminService.ContextAdminServiceClient>
        {
            protected ContextAdminServiceClient() { }
            public ContextAdminServiceClient(Grpc.Core.CallInvoker callInvoker) { }
            public ContextAdminServiceClient(Grpc.Core.ChannelBase channel) { }
            protected ContextAdminServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> CreateContext(Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> CreateContext(Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> DeleteContext(Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> DeleteContext(Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview GetContext(Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview GetContext(Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview> GetContextAsync(Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview> GetContextAsync(Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview> GetContexts(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview> GetContexts(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Admin.ContextAdminService.ContextAdminServiceClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate> SubscribeContextUpdates(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate> SubscribeContextUpdates(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> UpdateContextProperties(Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> UpdateContextProperties(Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
        }
    }
    public sealed class ContextId : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ContextId>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ContextId>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ContextId>
    {
        public const int ContextNameFieldNumber = 1;
        public ContextId() { }
        public ContextId(Io.Axoniq.Axonserver.Grpc.Admin.ContextId other) { }
        public string ContextName { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ContextId> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ContextId Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ContextId other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ContextId other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ContextOverview : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview>
    {
        public const int ChangePendingFieldNumber = 5;
        public const int MetaDataFieldNumber = 3;
        public const int NameFieldNumber = 1;
        public const int PendingSinceFieldNumber = 4;
        public const int ReplicationGroupFieldNumber = 2;
        public ContextOverview() { }
        public ContextOverview(Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview other) { }
        public bool ChangePending { get; set; }
        public Google.Protobuf.Collections.MapField<string, string> MetaData { get; }
        public string Name { get; set; }
        public long PendingSince { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview ReplicationGroup { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ContextOverview other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ContextRole : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ContextRole>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ContextRole>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ContextRole>
    {
        public const int ContextFieldNumber = 2;
        public const int RoleFieldNumber = 1;
        public ContextRole() { }
        public ContextRole(Io.Axoniq.Axonserver.Grpc.Admin.ContextRole other) { }
        public string Context { get; set; }
        public string Role { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ContextRole> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ContextRole Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ContextRole other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ContextRole other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ContextUpdate : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate>
    {
        public const int ContextFieldNumber = 1;
        public const int TypeFieldNumber = 2;
        public ContextUpdate() { }
        public ContextUpdate(Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate other) { }
        public string Context { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdateType Type { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ContextUpdate other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public enum ContextUpdateType
    {
        [Google.Protobuf.Reflection.OriginalName("CREATED")]
        Created = 0,
        [Google.Protobuf.Reflection.OriginalName("DELETED")]
        Deleted = 1,
        [Google.Protobuf.Reflection.OriginalName("UPDATED")]
        Updated = 2,
    }
    public sealed class CreateContextRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest>
    {
        public const int MetaDataFieldNumber = 3;
        public const int NameFieldNumber = 1;
        public const int ReplicationGroupNameFieldNumber = 2;
        public CreateContextRequest() { }
        public CreateContextRequest(Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest other) { }
        public Google.Protobuf.Collections.MapField<string, string> MetaData { get; }
        public string Name { get; set; }
        public string ReplicationGroupName { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.CreateContextRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class CreateOrUpdateUserRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest>
    {
        public const int PasswordFieldNumber = 2;
        public const int UserNameFieldNumber = 1;
        public const int UserRolesFieldNumber = 3;
        public CreateOrUpdateUserRequest() { }
        public CreateOrUpdateUserRequest(Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest other) { }
        public string Password { get; set; }
        public string UserName { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.UserRoleRequest> UserRoles { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class CreateReplicationGroupRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest>
    {
        public const int ChangePendingFieldNumber = 4;
        public const int MembersFieldNumber = 2;
        public const int NameFieldNumber = 1;
        public const int PendingSinceFieldNumber = 3;
        public CreateReplicationGroupRequest() { }
        public CreateReplicationGroupRequest(Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest other) { }
        public bool ChangePending { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupMember> Members { get; }
        public string Name { get; set; }
        public long PendingSince { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class DeleteContextRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest>
    {
        public const int NameFieldNumber = 1;
        public const int PreserveEventStoreFieldNumber = 2;
        public DeleteContextRequest() { }
        public DeleteContextRequest(Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest other) { }
        public string Name { get; set; }
        public bool PreserveEventStore { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.DeleteContextRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class DeleteReplicationGroupRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest>
    {
        public const int NameFieldNumber = 1;
        public const int PreserveEventStoreFieldNumber = 2;
        public DeleteReplicationGroupRequest() { }
        public DeleteReplicationGroupRequest(Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest other) { }
        public string Name { get; set; }
        public bool PreserveEventStore { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class DeleteUserRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.DeleteUserRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.DeleteUserRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.DeleteUserRequest>
    {
        public const int UserNameFieldNumber = 1;
        public DeleteUserRequest() { }
        public DeleteUserRequest(Io.Axoniq.Axonserver.Grpc.Admin.DeleteUserRequest other) { }
        public string UserName { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.DeleteUserRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.DeleteUserRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.DeleteUserRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.DeleteUserRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class EventProcessor : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor>
    {
        public const int ClientInstanceFieldNumber = 4;
        public const int IdentifierFieldNumber = 1;
        public const int IsStreamingFieldNumber = 3;
        public const int LoadBalancingStrategyNameFieldNumber = 5;
        public const int ModeFieldNumber = 2;
        public EventProcessor() { }
        public EventProcessor(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor other) { }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorInstance> ClientInstance { get; }
        public Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier Identifier { get; set; }
        public bool IsStreaming { get; set; }
        public string LoadBalancingStrategyName { get; set; }
        public string Mode { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class EventProcessorAdminService
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class EventProcessorAdminServiceClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorAdminService.EventProcessorAdminServiceClient>
        {
            protected EventProcessorAdminServiceClient() { }
            public EventProcessorAdminServiceClient(Grpc.Core.CallInvoker callInvoker) { }
            public EventProcessorAdminServiceClient(Grpc.Core.ChannelBase channel) { }
            protected EventProcessorAdminServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor> GetAllEventProcessors(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor> GetAllEventProcessors(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy> GetBalancingStrategies(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy> GetBalancingStrategies(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor> GetEventProcessorsByComponent(Io.Axoniq.Axonserver.Grpc.Component request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessor> GetEventProcessorsByComponent(Io.Axoniq.Axonserver.Grpc.Component request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> LoadBalanceProcessor(Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> LoadBalanceProcessor(Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult MergeEventProcessor(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult MergeEventProcessor(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> MergeEventProcessorAsync(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> MergeEventProcessorAsync(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult MoveEventProcessorSegment(Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult MoveEventProcessorSegment(Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> MoveEventProcessorSegmentAsync(Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> MoveEventProcessorSegmentAsync(Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorAdminService.EventProcessorAdminServiceClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult PauseEventProcessor(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult PauseEventProcessor(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> PauseEventProcessorAsync(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> PauseEventProcessorAsync(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> SetAutoLoadBalanceStrategy(Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> SetAutoLoadBalanceStrategy(Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult SplitEventProcessor(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult SplitEventProcessor(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> SplitEventProcessorAsync(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> SplitEventProcessorAsync(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult StartEventProcessor(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult StartEventProcessor(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> StartEventProcessorAsync(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.AdminActionResult> StartEventProcessorAsync(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
        }
    }
    public sealed class EventProcessorIdentifier : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier>
    {
        public const int ContextNameFieldNumber = 3;
        public const int ProcessorNameFieldNumber = 1;
        public const int TokenStoreIdentifierFieldNumber = 2;
        public EventProcessorIdentifier() { }
        public EventProcessorIdentifier(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier other) { }
        public string ContextName { get; set; }
        public string ProcessorName { get; set; }
        public string TokenStoreIdentifier { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class EventProcessorInstance : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorInstance>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorInstance>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorInstance>
    {
        public const int ClaimedSegmentFieldNumber = 4;
        public const int ClientIdFieldNumber = 1;
        public const int IsRunningFieldNumber = 2;
        public const int MaxCapacityFieldNumber = 3;
        public EventProcessorInstance() { }
        public EventProcessorInstance(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorInstance other) { }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorSegment> ClaimedSegment { get; }
        public string ClientId { get; set; }
        public bool IsRunning { get; set; }
        public int MaxCapacity { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorInstance> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorInstance Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorInstance other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorInstance other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class EventProcessorSegment : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorSegment>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorSegment>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorSegment>
    {
        public const int ClaimedByFieldNumber = 3;
        public const int ErrorFieldNumber = 8;
        public const int IdFieldNumber = 1;
        public const int IsCaughtUpFieldNumber = 4;
        public const int IsInErrorFieldNumber = 7;
        public const int IsReplayingFieldNumber = 5;
        public const int OnePartOfFieldNumber = 2;
        public const int TokenPositionFieldNumber = 6;
        public EventProcessorSegment() { }
        public EventProcessorSegment(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorSegment other) { }
        public string ClaimedBy { get; set; }
        public string Error { get; set; }
        public int Id { get; set; }
        public bool IsCaughtUp { get; set; }
        public bool IsInError { get; set; }
        public bool IsReplaying { get; set; }
        public int OnePartOf { get; set; }
        public long TokenPosition { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorSegment> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorSegment Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorSegment other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorSegment other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class GetContextRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest>
    {
        public const int NameFieldNumber = 1;
        public GetContextRequest() { }
        public GetContextRequest(Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest other) { }
        public string Name { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.GetContextRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class GetReplicationGroupRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest>
    {
        public const int NameFieldNumber = 1;
        public GetReplicationGroupRequest() { }
        public GetReplicationGroupRequest(Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest other) { }
        public string Name { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class JoinReplicationGroup : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup>
    {
        public const int NodeNameFieldNumber = 2;
        public const int ReplicationGroupNameFieldNumber = 1;
        public const int RoleFieldNumber = 3;
        public JoinReplicationGroup() { }
        public JoinReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup other) { }
        public string NodeName { get; set; }
        public string ReplicationGroupName { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Admin.Role Role { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class LeaveReplicationGroup : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup>
    {
        public const int NodeNameFieldNumber = 2;
        public const int PreserveEventStoreFieldNumber = 3;
        public const int ReplicationGroupNameFieldNumber = 1;
        public LeaveReplicationGroup() { }
        public LeaveReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup other) { }
        public string NodeName { get; set; }
        public bool PreserveEventStore { get; set; }
        public string ReplicationGroupName { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class LoadBalanceRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest>
    {
        public const int ProcessorFieldNumber = 1;
        public const int StrategyFieldNumber = 2;
        public LoadBalanceRequest() { }
        public LoadBalanceRequest(Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest other) { }
        public Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier Processor { get; set; }
        public string Strategy { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.LoadBalanceRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class LoadBalancingStrategy : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy>
    {
        public const int LabelFieldNumber = 2;
        public const int StrategyFieldNumber = 1;
        public LoadBalancingStrategy() { }
        public LoadBalancingStrategy(Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy other) { }
        public string Label { get; set; }
        public string Strategy { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.LoadBalancingStrategy other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class MoveSegment : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment>
    {
        public const int EventProcessorFieldNumber = 1;
        public const int SegmentFieldNumber = 2;
        public const int TargetClientIdFieldNumber = 3;
        public MoveSegment() { }
        public MoveSegment(Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment other) { }
        public Io.Axoniq.Axonserver.Grpc.Admin.EventProcessorIdentifier EventProcessor { get; set; }
        public int Segment { get; set; }
        public string TargetClientId { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.MoveSegment other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class NodeOverview : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview>
    {
        public const int GrpcPortFieldNumber = 2;
        public const int HostNameFieldNumber = 1;
        public const int HttpPortFieldNumber = 3;
        public const int NodeNameFieldNumber = 4;
        public const int ReplicationGroupsFieldNumber = 5;
        public const int TagsFieldNumber = 6;
        public NodeOverview() { }
        public NodeOverview(Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview other) { }
        public int GrpcPort { get; set; }
        public string HostName { get; set; }
        public int HttpPort { get; set; }
        public string NodeName { get; set; }
        public Google.Protobuf.Collections.RepeatedField<string> ReplicationGroups { get; }
        public Google.Protobuf.Collections.MapField<string, string> Tags { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class QueryInfo : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.QueryInfo>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.QueryInfo>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.QueryInfo>
    {
        public const int RequestFieldNumber = 1;
        public const int ResponseTypesFieldNumber = 2;
        public QueryInfo() { }
        public QueryInfo(Io.Axoniq.Axonserver.Grpc.Admin.QueryInfo other) { }
        public string Request { get; set; }
        public Google.Protobuf.Collections.RepeatedField<string> ResponseTypes { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.QueryInfo> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.QueryInfo Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.QueryInfo other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.QueryInfo other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class ReplicationGroupAdminService
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class ReplicationGroupAdminServiceClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupAdminService.ReplicationGroupAdminServiceClient>
        {
            protected ReplicationGroupAdminServiceClient() { }
            public ReplicationGroupAdminServiceClient(Grpc.Core.CallInvoker callInvoker) { }
            public ReplicationGroupAdminServiceClient(Grpc.Core.ChannelBase channel) { }
            protected ReplicationGroupAdminServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> AddNodeToReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> AddNodeToReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.JoinReplicationGroup request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> CreateReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> CreateReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.CreateReplicationGroupRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> DeleteReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> DeleteReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.DeleteReplicationGroupRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview> GetNodes(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.NodeOverview> GetNodes(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview GetReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview GetReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview> GetReplicationGroupAsync(Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview> GetReplicationGroupAsync(Io.Axoniq.Axonserver.Grpc.Admin.GetReplicationGroupRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview> GetReplicationGroups(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview> GetReplicationGroups(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupAdminService.ReplicationGroupAdminServiceClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> RemoveNodeFromReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> RemoveNodeFromReplicationGroup(Io.Axoniq.Axonserver.Grpc.Admin.LeaveReplicationGroup request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
        }
    }
    public sealed class ReplicationGroupContext : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupContext>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupContext>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupContext>
    {
        public const int ContextNameFieldNumber = 2;
        public const int MetaDataFieldNumber = 3;
        public const int ReplicationGroupNameFieldNumber = 1;
        public ReplicationGroupContext() { }
        public ReplicationGroupContext(Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupContext other) { }
        public string ContextName { get; set; }
        public Google.Protobuf.Collections.MapField<string, string> MetaData { get; }
        public string ReplicationGroupName { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupContext> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupContext Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupContext other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupContext other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ReplicationGroupMember : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupMember>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupMember>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupMember>
    {
        public const int HostFieldNumber = 2;
        public const int NodeNameFieldNumber = 1;
        public const int PendingDeleteFieldNumber = 5;
        public const int PortFieldNumber = 3;
        public const int RoleFieldNumber = 4;
        public ReplicationGroupMember() { }
        public ReplicationGroupMember(Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupMember other) { }
        public string Host { get; set; }
        public string NodeName { get; set; }
        public bool PendingDelete { get; set; }
        public int Port { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Admin.Role Role { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupMember> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupMember Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupMember other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupMember other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ReplicationGroupOverview : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview>
    {
        public const int ChangePendingFieldNumber = 4;
        public const int ContextsFieldNumber = 5;
        public const int MembersFieldNumber = 2;
        public const int NameFieldNumber = 1;
        public const int PendingSinceFieldNumber = 3;
        public ReplicationGroupOverview() { }
        public ReplicationGroupOverview(Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview other) { }
        public bool ChangePending { get; set; }
        public Google.Protobuf.Collections.RepeatedField<string> Contexts { get; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupMember> Members { get; }
        public string Name { get; set; }
        public long PendingSince { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.ReplicationGroupOverview other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public enum Result
    {
        [Google.Protobuf.Reflection.OriginalName("SUCCESS")]
        Success = 0,
        [Google.Protobuf.Reflection.OriginalName("ACCEPTED")]
        Accepted = 1,
    }
    public enum Role
    {
        [Google.Protobuf.Reflection.OriginalName("ROLE_PRIMARY")]
        Primary = 0,
        [Google.Protobuf.Reflection.OriginalName("ROLE_ACTIVE_BACKUP")]
        ActiveBackup = 2,
        [Google.Protobuf.Reflection.OriginalName("ROLE_PASSIVE_BACKUP")]
        PassiveBackup = 3,
        [Google.Protobuf.Reflection.OriginalName("ROLE_MESSAGING_ONLY")]
        MessagingOnly = 4,
        [Google.Protobuf.Reflection.OriginalName("ROLE_SECONDARY")]
        Secondary = 5,
    }
    public sealed class Token : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.Token>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.Token>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.Token>
    {
        public const int Token_FieldNumber = 1;
        public Token() { }
        public Token(Io.Axoniq.Axonserver.Grpc.Admin.Token other) { }
        public string Token_ { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.Token> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.Token Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.Token other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.Token other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class UpdateContextPropertiesRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest>
    {
        public const int MetaDataFieldNumber = 3;
        public const int NameFieldNumber = 1;
        public UpdateContextPropertiesRequest() { }
        public UpdateContextPropertiesRequest(Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest other) { }
        public Google.Protobuf.Collections.MapField<string, string> MetaData { get; }
        public string Name { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.UpdateContextPropertiesRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class UserAdminService
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class UserAdminServiceClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Admin.UserAdminService.UserAdminServiceClient>
        {
            protected UserAdminServiceClient() { }
            public UserAdminServiceClient(Grpc.Core.CallInvoker callInvoker) { }
            public UserAdminServiceClient(Grpc.Core.ChannelBase channel) { }
            protected UserAdminServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> CreateOrUpdateUser(Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> CreateOrUpdateUser(Io.Axoniq.Axonserver.Grpc.Admin.CreateOrUpdateUserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> DeleteUser(Io.Axoniq.Axonserver.Grpc.Admin.DeleteUserRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> DeleteUser(Io.Axoniq.Axonserver.Grpc.Admin.DeleteUserRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.UserOverview> GetUsers(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Admin.UserOverview> GetUsers(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Admin.UserAdminService.UserAdminServiceClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
        }
    }
    public sealed class UserOverview : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.UserOverview>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.UserOverview>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.UserOverview>
    {
        public const int EnabledFieldNumber = 2;
        public const int UserNameFieldNumber = 1;
        public const int UserRolesFieldNumber = 3;
        public UserOverview() { }
        public UserOverview(Io.Axoniq.Axonserver.Grpc.Admin.UserOverview other) { }
        public bool Enabled { get; set; }
        public string UserName { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.UserRoleOverview> UserRoles { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.UserOverview> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.UserOverview Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.UserOverview other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.UserOverview other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class UserRoleOverview : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.UserRoleOverview>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.UserRoleOverview>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.UserRoleOverview>
    {
        public const int ContextFieldNumber = 2;
        public const int RoleFieldNumber = 1;
        public UserRoleOverview() { }
        public UserRoleOverview(Io.Axoniq.Axonserver.Grpc.Admin.UserRoleOverview other) { }
        public string Context { get; set; }
        public string Role { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.UserRoleOverview> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.UserRoleOverview Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.UserRoleOverview other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.UserRoleOverview other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class UserRoleRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.UserRoleRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.UserRoleRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.UserRoleRequest>
    {
        public const int ContextFieldNumber = 2;
        public const int RoleFieldNumber = 1;
        public UserRoleRequest() { }
        public UserRoleRequest(Io.Axoniq.Axonserver.Grpc.Admin.UserRoleRequest other) { }
        public string Context { get; set; }
        public string Role { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.UserRoleRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.UserRoleRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.UserRoleRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.UserRoleRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class UserRoles : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Admin.UserRoles>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Admin.UserRoles>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Admin.UserRoles>
    {
        public const int UserNameFieldNumber = 1;
        public const int UserRoles_FieldNumber = 3;
        public UserRoles() { }
        public UserRoles(Io.Axoniq.Axonserver.Grpc.Admin.UserRoles other) { }
        public string UserName { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Admin.ContextRole> UserRoles_ { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Admin.UserRoles> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Admin.UserRoles Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Admin.UserRoles other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Admin.UserRoles other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
}
namespace Io.Axoniq.Axonserver.Grpc.Command
{
    public sealed class Command : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Command.Command>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Command.Command>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Command.Command>
    {
        public const int ClientIdFieldNumber = 7;
        public const int ComponentNameFieldNumber = 8;
        public const int MessageIdentifierFieldNumber = 1;
        public const int MetaDataFieldNumber = 5;
        public const int NameFieldNumber = 2;
        public const int PayloadFieldNumber = 4;
        public const int ProcessingInstructionsFieldNumber = 6;
        public const int TimestampFieldNumber = 3;
        public Command() { }
        public Command(Io.Axoniq.Axonserver.Grpc.Command.Command other) { }
        public string ClientId { get; set; }
        public string ComponentName { get; set; }
        public string MessageIdentifier { get; set; }
        public Google.Protobuf.Collections.MapField<string, Io.Axoniq.Axonserver.Grpc.MetaDataValue> MetaData { get; }
        public string Name { get; set; }
        public Io.Axoniq.Axonserver.Grpc.SerializedObject Payload { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.ProcessingInstruction> ProcessingInstructions { get; }
        public long Timestamp { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Command.Command> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Command.Command Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Command.Command other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Command.Command other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class CommandProviderInbound : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound>
    {
        public const int AckFieldNumber = 1;
        public const int CommandFieldNumber = 2;
        public const int InstructionIdFieldNumber = 3;
        public CommandProviderInbound() { }
        public CommandProviderInbound(Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound other) { }
        public Io.Axoniq.Axonserver.Grpc.InstructionAck Ack { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Command.Command Command { get; set; }
        public string InstructionId { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound.RequestOneofCase RequestCase { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound> Parser { get; }
        public int CalculateSize() { }
        public void ClearRequest() { }
        public Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum RequestOneofCase
        {
            None = 0,
            Ack = 1,
            Command = 2,
        }
    }
    public sealed class CommandProviderOutbound : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound>
    {
        public const int AckFieldNumber = 5;
        public const int CommandResponseFieldNumber = 4;
        public const int FlowControlFieldNumber = 3;
        public const int InstructionIdFieldNumber = 6;
        public const int SubscribeFieldNumber = 1;
        public const int UnsubscribeFieldNumber = 2;
        public CommandProviderOutbound() { }
        public CommandProviderOutbound(Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound other) { }
        public Io.Axoniq.Axonserver.Grpc.InstructionAck Ack { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Command.CommandResponse CommandResponse { get; set; }
        public Io.Axoniq.Axonserver.Grpc.FlowControl FlowControl { get; set; }
        public string InstructionId { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound.RequestOneofCase RequestCase { get; }
        public Io.Axoniq.Axonserver.Grpc.Command.CommandSubscription Subscribe { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Command.CommandSubscription Unsubscribe { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound> Parser { get; }
        public int CalculateSize() { }
        public void ClearRequest() { }
        public Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum RequestOneofCase
        {
            None = 0,
            Subscribe = 1,
            Unsubscribe = 2,
            FlowControl = 3,
            CommandResponse = 4,
            Ack = 5,
        }
    }
    public static class CommandReflection
    {
        public static Google.Protobuf.Reflection.FileDescriptor Descriptor { get; }
    }
    public sealed class CommandResponse : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Command.CommandResponse>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Command.CommandResponse>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Command.CommandResponse>
    {
        public const int ErrorCodeFieldNumber = 2;
        public const int ErrorMessageFieldNumber = 3;
        public const int MessageIdentifierFieldNumber = 1;
        public const int MetaDataFieldNumber = 5;
        public const int PayloadFieldNumber = 4;
        public const int ProcessingInstructionsFieldNumber = 6;
        public const int RequestIdentifierFieldNumber = 7;
        public CommandResponse() { }
        public CommandResponse(Io.Axoniq.Axonserver.Grpc.Command.CommandResponse other) { }
        public string ErrorCode { get; set; }
        public Io.Axoniq.Axonserver.Grpc.ErrorMessage ErrorMessage { get; set; }
        public string MessageIdentifier { get; set; }
        public Google.Protobuf.Collections.MapField<string, Io.Axoniq.Axonserver.Grpc.MetaDataValue> MetaData { get; }
        public Io.Axoniq.Axonserver.Grpc.SerializedObject Payload { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.ProcessingInstruction> ProcessingInstructions { get; }
        public string RequestIdentifier { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Command.CommandResponse> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Command.CommandResponse Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Command.CommandResponse other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Command.CommandResponse other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class CommandService
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class CommandServiceClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Command.CommandService.CommandServiceClient>
        {
            protected CommandServiceClient() { }
            public CommandServiceClient(Grpc.Core.CallInvoker callInvoker) { }
            public CommandServiceClient(Grpc.Core.ChannelBase channel) { }
            protected CommandServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Command.CommandResponse Dispatch(Io.Axoniq.Axonserver.Grpc.Command.Command request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Command.CommandResponse Dispatch(Io.Axoniq.Axonserver.Grpc.Command.Command request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Command.CommandResponse> DispatchAsync(Io.Axoniq.Axonserver.Grpc.Command.Command request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Command.CommandResponse> DispatchAsync(Io.Axoniq.Axonserver.Grpc.Command.Command request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Command.CommandService.CommandServiceClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound, Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound> OpenStream(Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Command.CommandProviderOutbound, Io.Axoniq.Axonserver.Grpc.Command.CommandProviderInbound> OpenStream(Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
        }
    }
    public sealed class CommandSubscription : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Command.CommandSubscription>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Command.CommandSubscription>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Command.CommandSubscription>
    {
        public const int ClientIdFieldNumber = 4;
        public const int CommandFieldNumber = 2;
        public const int ComponentNameFieldNumber = 3;
        public const int LoadFactorFieldNumber = 5;
        public const int MessageIdFieldNumber = 1;
        public CommandSubscription() { }
        public CommandSubscription(Io.Axoniq.Axonserver.Grpc.Command.CommandSubscription other) { }
        public string ClientId { get; set; }
        public string Command { get; set; }
        public string ComponentName { get; set; }
        public int LoadFactor { get; set; }
        public string MessageId { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Command.CommandSubscription> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Command.CommandSubscription Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Command.CommandSubscription other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Command.CommandSubscription other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
}
namespace Io.Axoniq.Axonserver.Grpc
{
    public static class CommonReflection
    {
        public static Google.Protobuf.Reflection.FileDescriptor Descriptor { get; }
    }
    public sealed class Component : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Component>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Component>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Component>
    {
        public const int Component_FieldNumber = 1;
        public Component() { }
        public Component(Io.Axoniq.Axonserver.Grpc.Component other) { }
        public string Component_ { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Component> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Component Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Component other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Component other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ErrorMessage : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.ErrorMessage>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.ErrorMessage>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.ErrorMessage>
    {
        public const int DetailsFieldNumber = 3;
        public const int ErrorCodeFieldNumber = 4;
        public const int LocationFieldNumber = 2;
        public const int MessageFieldNumber = 1;
        public ErrorMessage() { }
        public ErrorMessage(Io.Axoniq.Axonserver.Grpc.ErrorMessage other) { }
        public Google.Protobuf.Collections.RepeatedField<string> Details { get; }
        public string ErrorCode { get; set; }
        public string Location { get; set; }
        public string Message { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.ErrorMessage> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.ErrorMessage Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.ErrorMessage other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.ErrorMessage other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class FlowControl : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.FlowControl>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.FlowControl>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.FlowControl>
    {
        public const int ClientIdFieldNumber = 2;
        public const int PermitsFieldNumber = 3;
        public FlowControl() { }
        public FlowControl(Io.Axoniq.Axonserver.Grpc.FlowControl other) { }
        public string ClientId { get; set; }
        public long Permits { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.FlowControl> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.FlowControl Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.FlowControl other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.FlowControl other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class InstructionAck : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.InstructionAck>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.InstructionAck>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.InstructionAck>
    {
        public const int ErrorFieldNumber = 3;
        public const int InstructionIdFieldNumber = 1;
        public const int SuccessFieldNumber = 2;
        public InstructionAck() { }
        public InstructionAck(Io.Axoniq.Axonserver.Grpc.InstructionAck other) { }
        public Io.Axoniq.Axonserver.Grpc.ErrorMessage Error { get; set; }
        public string InstructionId { get; set; }
        public bool Success { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.InstructionAck> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.InstructionAck Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.InstructionAck other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.InstructionAck other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class InstructionResult : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.InstructionResult>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.InstructionResult>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.InstructionResult>
    {
        public const int ErrorFieldNumber = 3;
        public const int InstructionIdFieldNumber = 1;
        public const int SuccessFieldNumber = 2;
        public InstructionResult() { }
        public InstructionResult(Io.Axoniq.Axonserver.Grpc.InstructionResult other) { }
        public Io.Axoniq.Axonserver.Grpc.ErrorMessage Error { get; set; }
        public string InstructionId { get; set; }
        public bool Success { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.InstructionResult> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.InstructionResult Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.InstructionResult other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.InstructionResult other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class MetaDataValue : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.MetaDataValue>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.MetaDataValue>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.MetaDataValue>
    {
        public const int BooleanValueFieldNumber = 3;
        public const int BytesValueFieldNumber = 5;
        public const int DoubleValueFieldNumber = 4;
        public const int NumberValueFieldNumber = 2;
        public const int TextValueFieldNumber = 1;
        public MetaDataValue() { }
        public MetaDataValue(Io.Axoniq.Axonserver.Grpc.MetaDataValue other) { }
        public bool BooleanValue { get; set; }
        public Io.Axoniq.Axonserver.Grpc.SerializedObject BytesValue { get; set; }
        public Io.Axoniq.Axonserver.Grpc.MetaDataValue.DataOneofCase DataCase { get; }
        public double DoubleValue { get; set; }
        public bool HasBooleanValue { get; }
        public bool HasDoubleValue { get; }
        public bool HasNumberValue { get; }
        public bool HasTextValue { get; }
        public long NumberValue { get; set; }
        public string TextValue { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.MetaDataValue> Parser { get; }
        public int CalculateSize() { }
        public void ClearBooleanValue() { }
        public void ClearData() { }
        public void ClearDoubleValue() { }
        public void ClearNumberValue() { }
        public void ClearTextValue() { }
        public Io.Axoniq.Axonserver.Grpc.MetaDataValue Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.MetaDataValue other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.MetaDataValue other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum DataOneofCase
        {
            None = 0,
            TextValue = 1,
            NumberValue = 2,
            BooleanValue = 3,
            DoubleValue = 4,
            BytesValue = 5,
        }
    }
    public sealed class Principal : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Principal>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Principal>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Principal>
    {
        public const int UserFieldNumber = 1;
        public Principal() { }
        public Principal(Io.Axoniq.Axonserver.Grpc.Principal other) { }
        public string User { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Principal> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Principal Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Principal other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Principal other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ProcessingInstruction : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.ProcessingInstruction>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.ProcessingInstruction>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.ProcessingInstruction>
    {
        public const int KeyFieldNumber = 1;
        public const int ValueFieldNumber = 2;
        public ProcessingInstruction() { }
        public ProcessingInstruction(Io.Axoniq.Axonserver.Grpc.ProcessingInstruction other) { }
        public Io.Axoniq.Axonserver.Grpc.ProcessingKey Key { get; set; }
        public Io.Axoniq.Axonserver.Grpc.MetaDataValue Value { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.ProcessingInstruction> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.ProcessingInstruction Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.ProcessingInstruction other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.ProcessingInstruction other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public enum ProcessingKey
    {
        [Google.Protobuf.Reflection.OriginalName("ROUTING_KEY")]
        RoutingKey = 0,
        [Google.Protobuf.Reflection.OriginalName("PRIORITY")]
        Priority = 1,
        [Google.Protobuf.Reflection.OriginalName("TIMEOUT")]
        Timeout = 2,
        [Google.Protobuf.Reflection.OriginalName("NR_OF_RESULTS")]
        NrOfResults = 3,
        [Google.Protobuf.Reflection.OriginalName("SERVER_SUPPORTS_STREAMING")]
        ServerSupportsStreaming = 7,
        [Google.Protobuf.Reflection.OriginalName("CLIENT_SUPPORTS_STREAMING")]
        ClientSupportsStreaming = 8,
    }
    public sealed class SerializedObject : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.SerializedObject>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.SerializedObject>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.SerializedObject>
    {
        public const int DataFieldNumber = 3;
        public const int RevisionFieldNumber = 2;
        public const int TypeFieldNumber = 1;
        public SerializedObject() { }
        public SerializedObject(Io.Axoniq.Axonserver.Grpc.SerializedObject other) { }
        public Google.Protobuf.ByteString Data { get; set; }
        public string Revision { get; set; }
        public string Type { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.SerializedObject> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.SerializedObject Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.SerializedObject other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.SerializedObject other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public enum TaskStatus
    {
        [Google.Protobuf.Reflection.OriginalName("SCHEDULED")]
        Scheduled = 0,
        [Google.Protobuf.Reflection.OriginalName("COMPLETED")]
        Completed = 1,
        [Google.Protobuf.Reflection.OriginalName("FAILED")]
        Failed = 2,
        [Google.Protobuf.Reflection.OriginalName("RUNNING")]
        Running = 3,
        [Google.Protobuf.Reflection.OriginalName("CANCELLED")]
        Cancelled = 4,
    }
}
namespace Io.Axoniq.Axonserver.Grpc.Control
{
    public sealed class ClientIdentification : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification>
    {
        public const int ClientIdFieldNumber = 1;
        public const int ComponentNameFieldNumber = 2;
        public const int TagsFieldNumber = 3;
        public const int VersionFieldNumber = 4;
        public ClientIdentification() { }
        public ClientIdentification(Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification other) { }
        public string ClientId { get; set; }
        public string ComponentName { get; set; }
        public Google.Protobuf.Collections.MapField<string, string> Tags { get; }
        public string Version { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class ControlReflection
    {
        public static Google.Protobuf.Reflection.FileDescriptor Descriptor { get; }
    }
    public sealed class EventProcessorInfo : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo>
    {
        public const int ActiveThreadsFieldNumber = 3;
        public const int AvailableThreadsFieldNumber = 7;
        public const int ErrorFieldNumber = 5;
        public const int IsStreamingProcessorFieldNumber = 9;
        public const int LoadBalancingStrategyNameFieldNumber = 10;
        public const int ModeFieldNumber = 2;
        public const int ProcessorNameFieldNumber = 1;
        public const int RunningFieldNumber = 4;
        public const int SegmentStatusFieldNumber = 6;
        public const int TokenStoreIdentifierFieldNumber = 8;
        public EventProcessorInfo() { }
        public EventProcessorInfo(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo other) { }
        public int ActiveThreads { get; set; }
        public int AvailableThreads { get; set; }
        public bool Error { get; set; }
        public bool IsStreamingProcessor { get; set; }
        public string LoadBalancingStrategyName { get; set; }
        public string Mode { get; set; }
        public string ProcessorName { get; set; }
        public bool Running { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo.Types.SegmentStatus> SegmentStatus { get; }
        public string TokenStoreIdentifier { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public static class Types
        {
            public sealed class SegmentStatus : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo.Types.SegmentStatus>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo.Types.SegmentStatus>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo.Types.SegmentStatus>
            {
                public const int CaughtUpFieldNumber = 2;
                public const int ErrorStateFieldNumber = 6;
                public const int OnePartOfFieldNumber = 4;
                public const int ReplayingFieldNumber = 3;
                public const int SegmentIdFieldNumber = 1;
                public const int TokenPositionFieldNumber = 5;
                public SegmentStatus() { }
                public SegmentStatus(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo.Types.SegmentStatus other) { }
                public bool CaughtUp { get; set; }
                public string ErrorState { get; set; }
                public int OnePartOf { get; set; }
                public bool Replaying { get; set; }
                public int SegmentId { get; set; }
                public long TokenPosition { get; set; }
                public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
                public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo.Types.SegmentStatus> Parser { get; }
                public int CalculateSize() { }
                public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo.Types.SegmentStatus Clone() { }
                public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo.Types.SegmentStatus other) { }
                public override bool Equals(object other) { }
                public override int GetHashCode() { }
                public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
                public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo.Types.SegmentStatus other) { }
                public override string ToString() { }
                public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
            }
        }
    }
    public sealed class EventProcessorReference : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference>
    {
        public const int ProcessorNameFieldNumber = 1;
        public EventProcessorReference() { }
        public EventProcessorReference(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference other) { }
        public string ProcessorName { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class EventProcessorSegmentReference : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference>
    {
        public const int ProcessorNameFieldNumber = 1;
        public const int SegmentIdentifierFieldNumber = 2;
        public EventProcessorSegmentReference() { }
        public EventProcessorSegmentReference(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference other) { }
        public string ProcessorName { get; set; }
        public int SegmentIdentifier { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class Heartbeat : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.Heartbeat>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.Heartbeat>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.Heartbeat>
    {
        public Heartbeat() { }
        public Heartbeat(Io.Axoniq.Axonserver.Grpc.Control.Heartbeat other) { }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.Heartbeat> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Control.Heartbeat Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.Heartbeat other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.Heartbeat other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class NodeInfo : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.NodeInfo>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.NodeInfo>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.NodeInfo>
    {
        public const int GrpcPortFieldNumber = 2;
        public const int HostNameFieldNumber = 1;
        public const int HttpPortFieldNumber = 3;
        public const int NodeNameFieldNumber = 5;
        public const int VersionFieldNumber = 4;
        public NodeInfo() { }
        public NodeInfo(Io.Axoniq.Axonserver.Grpc.Control.NodeInfo other) { }
        public int GrpcPort { get; set; }
        public string HostName { get; set; }
        public int HttpPort { get; set; }
        public string NodeName { get; set; }
        public int Version { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.NodeInfo> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Control.NodeInfo Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.NodeInfo other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.NodeInfo other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class PlatformInboundInstruction : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction>
    {
        public const int AckFieldNumber = 4;
        public const int EventProcessorInfoFieldNumber = 2;
        public const int HeartbeatFieldNumber = 3;
        public const int InstructionIdFieldNumber = 5;
        public const int RegisterFieldNumber = 1;
        public const int ResultFieldNumber = 6;
        public PlatformInboundInstruction() { }
        public PlatformInboundInstruction(Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction other) { }
        public Io.Axoniq.Axonserver.Grpc.InstructionAck Ack { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorInfo EventProcessorInfo { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.Heartbeat Heartbeat { get; set; }
        public string InstructionId { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification Register { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction.RequestOneofCase RequestCase { get; }
        public Io.Axoniq.Axonserver.Grpc.InstructionResult Result { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction> Parser { get; }
        public int CalculateSize() { }
        public void ClearRequest() { }
        public Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum RequestOneofCase
        {
            None = 0,
            Register = 1,
            EventProcessorInfo = 2,
            Heartbeat = 3,
            Ack = 4,
            Result = 6,
        }
    }
    public sealed class PlatformInfo : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo>
    {
        public const int PrimaryFieldNumber = 1;
        public const int SameConnectionFieldNumber = 2;
        public PlatformInfo() { }
        public PlatformInfo(Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo other) { }
        public Io.Axoniq.Axonserver.Grpc.Control.NodeInfo Primary { get; set; }
        public bool SameConnection { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class PlatformOutboundInstruction : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction>
    {
        public const int AckFieldNumber = 11;
        public const int HeartbeatFieldNumber = 10;
        public const int InstructionIdFieldNumber = 12;
        public const int MergeEventProcessorSegmentFieldNumber = 9;
        public const int NodeNotificationFieldNumber = 1;
        public const int PauseEventProcessorFieldNumber = 4;
        public const int ReleaseSegmentFieldNumber = 6;
        public const int RequestEventProcessorInfoFieldNumber = 7;
        public const int RequestReconnectFieldNumber = 3;
        public const int SplitEventProcessorSegmentFieldNumber = 8;
        public const int StartEventProcessorFieldNumber = 5;
        public PlatformOutboundInstruction() { }
        public PlatformOutboundInstruction(Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction other) { }
        public Io.Axoniq.Axonserver.Grpc.InstructionAck Ack { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.Heartbeat Heartbeat { get; set; }
        public string InstructionId { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference MergeEventProcessorSegment { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.NodeInfo NodeNotification { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference PauseEventProcessor { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference ReleaseSegment { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction.RequestOneofCase RequestCase { get; }
        public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference RequestEventProcessorInfo { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.RequestReconnect RequestReconnect { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorSegmentReference SplitEventProcessorSegment { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Control.EventProcessorReference StartEventProcessor { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction> Parser { get; }
        public int CalculateSize() { }
        public void ClearRequest() { }
        public Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum RequestOneofCase
        {
            None = 0,
            NodeNotification = 1,
            RequestReconnect = 3,
            PauseEventProcessor = 4,
            StartEventProcessor = 5,
            ReleaseSegment = 6,
            RequestEventProcessorInfo = 7,
            SplitEventProcessorSegment = 8,
            MergeEventProcessorSegment = 9,
            Heartbeat = 10,
            Ack = 11,
        }
    }
    public static class PlatformService
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class PlatformServiceClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Control.PlatformService.PlatformServiceClient>
        {
            protected PlatformServiceClient() { }
            public PlatformServiceClient(Grpc.Core.CallInvoker callInvoker) { }
            public PlatformServiceClient(Grpc.Core.ChannelBase channel) { }
            protected PlatformServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo GetPlatformServer(Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo GetPlatformServer(Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo> GetPlatformServerAsync(Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Control.PlatformInfo> GetPlatformServerAsync(Io.Axoniq.Axonserver.Grpc.Control.ClientIdentification request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Control.PlatformService.PlatformServiceClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction, Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction> OpenStream(Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Control.PlatformInboundInstruction, Io.Axoniq.Axonserver.Grpc.Control.PlatformOutboundInstruction> OpenStream(Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
        }
    }
    public sealed class RequestReconnect : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Control.RequestReconnect>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Control.RequestReconnect>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Control.RequestReconnect>
    {
        public RequestReconnect() { }
        public RequestReconnect(Io.Axoniq.Axonserver.Grpc.Control.RequestReconnect other) { }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Control.RequestReconnect> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Control.RequestReconnect Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Control.RequestReconnect other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Control.RequestReconnect other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
}
namespace Io.Axoniq.Axonserver.Grpc.Event
{
    public sealed class ApplyTransformationRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.ApplyTransformationRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.ApplyTransformationRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.ApplyTransformationRequest>
    {
        public const int LastSequenceFieldNumber = 2;
        public const int TransformationIdFieldNumber = 1;
        public ApplyTransformationRequest() { }
        public ApplyTransformationRequest(Io.Axoniq.Axonserver.Grpc.Event.ApplyTransformationRequest other) { }
        public long LastSequence { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Event.TransformationId TransformationId { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.ApplyTransformationRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.ApplyTransformationRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.ApplyTransformationRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.ApplyTransformationRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class CancelScheduledEventRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest>
    {
        public const int TokenFieldNumber = 1;
        public CancelScheduledEventRequest() { }
        public CancelScheduledEventRequest(Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest other) { }
        public string Token { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ColumnsResponse : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.ColumnsResponse>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.ColumnsResponse>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.ColumnsResponse>
    {
        public const int ColumnFieldNumber = 1;
        public ColumnsResponse() { }
        public ColumnsResponse(Io.Axoniq.Axonserver.Grpc.Event.ColumnsResponse other) { }
        public Google.Protobuf.Collections.RepeatedField<string> Column { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.ColumnsResponse> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.ColumnsResponse Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.ColumnsResponse other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.ColumnsResponse other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class CompactionRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.CompactionRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.CompactionRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.CompactionRequest>
    {
        public CompactionRequest() { }
        public CompactionRequest(Io.Axoniq.Axonserver.Grpc.Event.CompactionRequest other) { }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.CompactionRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.CompactionRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.CompactionRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.CompactionRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class Confirmation : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.Confirmation>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.Confirmation>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.Confirmation>
    {
        public const int SuccessFieldNumber = 1;
        public Confirmation() { }
        public Confirmation(Io.Axoniq.Axonserver.Grpc.Event.Confirmation other) { }
        public bool Success { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.Confirmation> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.Confirmation Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.Confirmation other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.Confirmation other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class DeletedEvent : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.DeletedEvent>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.DeletedEvent>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.DeletedEvent>
    {
        public const int TokenFieldNumber = 1;
        public DeletedEvent() { }
        public DeletedEvent(Io.Axoniq.Axonserver.Grpc.Event.DeletedEvent other) { }
        public long Token { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.DeletedEvent> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.DeletedEvent Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.DeletedEvent other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.DeletedEvent other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class Event : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.Event>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.Event>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.Event>
    {
        public const int AggregateIdentifierFieldNumber = 2;
        public const int AggregateSequenceNumberFieldNumber = 3;
        public const int AggregateTypeFieldNumber = 4;
        public const int MessageIdentifierFieldNumber = 1;
        public const int MetaDataFieldNumber = 7;
        public const int PayloadFieldNumber = 6;
        public const int SnapshotFieldNumber = 8;
        public const int TimestampFieldNumber = 5;
        public Event() { }
        public Event(Io.Axoniq.Axonserver.Grpc.Event.Event other) { }
        public string AggregateIdentifier { get; set; }
        public long AggregateSequenceNumber { get; set; }
        public string AggregateType { get; set; }
        public string MessageIdentifier { get; set; }
        public Google.Protobuf.Collections.MapField<string, Io.Axoniq.Axonserver.Grpc.MetaDataValue> MetaData { get; }
        public Io.Axoniq.Axonserver.Grpc.SerializedObject Payload { get; set; }
        public bool Snapshot { get; set; }
        public long Timestamp { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.Event> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.Event Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.Event other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.Event other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class EventReflection
    {
        public static Google.Protobuf.Reflection.FileDescriptor Descriptor { get; }
    }
    public static class EventScheduler
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class EventSchedulerClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Event.EventScheduler.EventSchedulerClient>
        {
            protected EventSchedulerClient() { }
            public EventSchedulerClient(Grpc.Core.CallInvoker callInvoker) { }
            public EventSchedulerClient(Grpc.Core.ChannelBase channel) { }
            protected EventSchedulerClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Io.Axoniq.Axonserver.Grpc.InstructionAck CancelScheduledEvent(Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.InstructionAck CancelScheduledEvent(Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.InstructionAck> CancelScheduledEventAsync(Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.InstructionAck> CancelScheduledEventAsync(Io.Axoniq.Axonserver.Grpc.Event.CancelScheduledEventRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Event.EventScheduler.EventSchedulerClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken RescheduleEvent(Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken RescheduleEvent(Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken> RescheduleEventAsync(Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken> RescheduleEventAsync(Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken ScheduleEvent(Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken ScheduleEvent(Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken> ScheduleEventAsync(Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken> ScheduleEventAsync(Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
        }
    }
    public static class EventStore
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class EventStoreClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Event.EventStore.EventStoreClient>
        {
            protected EventStoreClient() { }
            public EventStoreClient(Grpc.Core.CallInvoker callInvoker) { }
            public EventStoreClient(Grpc.Core.ChannelBase channel) { }
            protected EventStoreClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncClientStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.Event, Io.Axoniq.Axonserver.Grpc.Event.Confirmation> AppendEvent(Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncClientStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.Event, Io.Axoniq.Axonserver.Grpc.Event.Confirmation> AppendEvent(Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.Confirmation AppendSnapshot(Io.Axoniq.Axonserver.Grpc.Event.Event request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.Confirmation AppendSnapshot(Io.Axoniq.Axonserver.Grpc.Event.Event request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.Confirmation> AppendSnapshotAsync(Io.Axoniq.Axonserver.Grpc.Event.Event request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.Confirmation> AppendSnapshotAsync(Io.Axoniq.Axonserver.Grpc.Event.Event request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.TrackingToken GetFirstToken(Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.TrackingToken GetFirstToken(Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.TrackingToken> GetFirstTokenAsync(Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.TrackingToken> GetFirstTokenAsync(Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.TrackingToken GetLastToken(Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.TrackingToken GetLastToken(Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.TrackingToken> GetLastTokenAsync(Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.TrackingToken> GetLastTokenAsync(Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.TrackingToken GetTokenAt(Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.TrackingToken GetTokenAt(Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.TrackingToken> GetTokenAtAsync(Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.TrackingToken> GetTokenAtAsync(Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.Event> ListAggregateEvents(Io.Axoniq.Axonserver.Grpc.Event.GetAggregateEventsRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.Event> ListAggregateEvents(Io.Axoniq.Axonserver.Grpc.Event.GetAggregateEventsRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.Event> ListAggregateSnapshots(Io.Axoniq.Axonserver.Grpc.Event.GetAggregateSnapshotsRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.Event> ListAggregateSnapshots(Io.Axoniq.Axonserver.Grpc.Event.GetAggregateSnapshotsRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.GetEventsRequest, Io.Axoniq.Axonserver.Grpc.Event.EventWithToken> ListEvents(Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.GetEventsRequest, Io.Axoniq.Axonserver.Grpc.Event.EventWithToken> ListEvents(Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Event.EventStore.EventStoreClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.QueryEventsRequest, Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse> QueryEvents(Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.QueryEventsRequest, Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse> QueryEvents(Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse ReadHighestSequenceNr(Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse ReadHighestSequenceNr(Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse> ReadHighestSequenceNrAsync(Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse> ReadHighestSequenceNrAsync(Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
        }
    }
    public static class EventTransformationService
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class EventTransformationServiceClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Event.EventTransformationService.EventTransformationServiceClient>
        {
            protected EventTransformationServiceClient() { }
            public EventTransformationServiceClient(Grpc.Core.CallInvoker callInvoker) { }
            public EventTransformationServiceClient(Grpc.Core.ChannelBase channel) { }
            protected EventTransformationServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> ApplyTransformation(Io.Axoniq.Axonserver.Grpc.Event.ApplyTransformationRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> ApplyTransformation(Io.Axoniq.Axonserver.Grpc.Event.ApplyTransformationRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> CancelTransformation(Io.Axoniq.Axonserver.Grpc.Event.TransformationId request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> CancelTransformation(Io.Axoniq.Axonserver.Grpc.Event.TransformationId request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> Compact(Io.Axoniq.Axonserver.Grpc.Event.CompactionRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Google.Protobuf.WellKnownTypes.Empty> Compact(Io.Axoniq.Axonserver.Grpc.Event.CompactionRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            protected override Io.Axoniq.Axonserver.Grpc.Event.EventTransformationService.EventTransformationServiceClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.TransformationId StartTransformation(Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest request, Grpc.Core.CallOptions options) { }
            public virtual Io.Axoniq.Axonserver.Grpc.Event.TransformationId StartTransformation(Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.TransformationId> StartTransformationAsync(Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncUnaryCall<Io.Axoniq.Axonserver.Grpc.Event.TransformationId> StartTransformationAsync(Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.TransformRequest, Io.Axoniq.Axonserver.Grpc.Event.TransformRequestAck> TransformEvents(Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.TransformRequest, Io.Axoniq.Axonserver.Grpc.Event.TransformRequestAck> TransformEvents(Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.Transformation> Transformations(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Event.Transformation> Transformations(Google.Protobuf.WellKnownTypes.Empty request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
        }
    }
    public sealed class EventWithToken : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.EventWithToken>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.EventWithToken>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.EventWithToken>
    {
        public const int EventFieldNumber = 2;
        public const int TokenFieldNumber = 1;
        public EventWithToken() { }
        public EventWithToken(Io.Axoniq.Axonserver.Grpc.Event.EventWithToken other) { }
        public Io.Axoniq.Axonserver.Grpc.Event.Event Event { get; set; }
        public long Token { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.EventWithToken> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.EventWithToken Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.EventWithToken other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.EventWithToken other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class GetAggregateEventsRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.GetAggregateEventsRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.GetAggregateEventsRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.GetAggregateEventsRequest>
    {
        public const int AggregateIdFieldNumber = 1;
        public const int AllowSnapshotsFieldNumber = 3;
        public const int InitialSequenceFieldNumber = 2;
        public const int MaxSequenceFieldNumber = 4;
        public const int MinTokenFieldNumber = 5;
        public GetAggregateEventsRequest() { }
        public GetAggregateEventsRequest(Io.Axoniq.Axonserver.Grpc.Event.GetAggregateEventsRequest other) { }
        public string AggregateId { get; set; }
        public bool AllowSnapshots { get; set; }
        public long InitialSequence { get; set; }
        public long MaxSequence { get; set; }
        public long MinToken { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.GetAggregateEventsRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.GetAggregateEventsRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.GetAggregateEventsRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.GetAggregateEventsRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class GetAggregateSnapshotsRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.GetAggregateSnapshotsRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.GetAggregateSnapshotsRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.GetAggregateSnapshotsRequest>
    {
        public const int AggregateIdFieldNumber = 1;
        public const int InitialSequenceFieldNumber = 2;
        public const int MaxResultsFieldNumber = 4;
        public const int MaxSequenceFieldNumber = 3;
        public GetAggregateSnapshotsRequest() { }
        public GetAggregateSnapshotsRequest(Io.Axoniq.Axonserver.Grpc.Event.GetAggregateSnapshotsRequest other) { }
        public string AggregateId { get; set; }
        public long InitialSequence { get; set; }
        public int MaxResults { get; set; }
        public long MaxSequence { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.GetAggregateSnapshotsRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.GetAggregateSnapshotsRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.GetAggregateSnapshotsRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.GetAggregateSnapshotsRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class GetEventsRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.GetEventsRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.GetEventsRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.GetEventsRequest>
    {
        public const int BlacklistFieldNumber = 6;
        public const int ClientIdFieldNumber = 3;
        public const int ComponentNameFieldNumber = 4;
        public const int ForceReadFromLeaderFieldNumber = 7;
        public const int NumberOfPermitsFieldNumber = 2;
        public const int ProcessorFieldNumber = 5;
        public const int TrackingTokenFieldNumber = 1;
        public GetEventsRequest() { }
        public GetEventsRequest(Io.Axoniq.Axonserver.Grpc.Event.GetEventsRequest other) { }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Event.PayloadDescription> Blacklist { get; }
        public string ClientId { get; set; }
        public string ComponentName { get; set; }
        public bool ForceReadFromLeader { get; set; }
        public long NumberOfPermits { get; set; }
        public string Processor { get; set; }
        public long TrackingToken { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.GetEventsRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.GetEventsRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.GetEventsRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.GetEventsRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class GetFirstTokenRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest>
    {
        public GetFirstTokenRequest() { }
        public GetFirstTokenRequest(Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest other) { }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.GetFirstTokenRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class GetLastTokenRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest>
    {
        public GetLastTokenRequest() { }
        public GetLastTokenRequest(Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest other) { }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.GetLastTokenRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class GetTokenAtRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest>
    {
        public const int InstantFieldNumber = 1;
        public GetTokenAtRequest() { }
        public GetTokenAtRequest(Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest other) { }
        public long Instant { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.GetTokenAtRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class PayloadDescription : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.PayloadDescription>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.PayloadDescription>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.PayloadDescription>
    {
        public const int RevisionFieldNumber = 2;
        public const int TypeFieldNumber = 1;
        public PayloadDescription() { }
        public PayloadDescription(Io.Axoniq.Axonserver.Grpc.Event.PayloadDescription other) { }
        public string Revision { get; set; }
        public string Type { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.PayloadDescription> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.PayloadDescription Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.PayloadDescription other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.PayloadDescription other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class QueryEventsRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.QueryEventsRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.QueryEventsRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.QueryEventsRequest>
    {
        public const int ContextNameFieldNumber = 6;
        public const int ForceReadFromLeaderFieldNumber = 4;
        public const int LiveEventsFieldNumber = 3;
        public const int NumberOfPermitsFieldNumber = 2;
        public const int QueryFieldNumber = 1;
        public const int QuerySnapshotsFieldNumber = 5;
        public QueryEventsRequest() { }
        public QueryEventsRequest(Io.Axoniq.Axonserver.Grpc.Event.QueryEventsRequest other) { }
        public string ContextName { get; set; }
        public bool ForceReadFromLeader { get; set; }
        public bool LiveEvents { get; set; }
        public long NumberOfPermits { get; set; }
        public string Query { get; set; }
        public bool QuerySnapshots { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.QueryEventsRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.QueryEventsRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.QueryEventsRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.QueryEventsRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class QueryEventsResponse : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse>
    {
        public const int ColumnsFieldNumber = 1;
        public const int FilesCompletedFieldNumber = 3;
        public const int RowFieldNumber = 2;
        public QueryEventsResponse() { }
        public QueryEventsResponse(Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse other) { }
        public Io.Axoniq.Axonserver.Grpc.Event.ColumnsResponse Columns { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse.DataOneofCase DataCase { get; }
        public Io.Axoniq.Axonserver.Grpc.Event.Confirmation FilesCompleted { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Event.RowResponse Row { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse> Parser { get; }
        public int CalculateSize() { }
        public void ClearData() { }
        public Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.QueryEventsResponse other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum DataOneofCase
        {
            None = 0,
            Columns = 1,
            Row = 2,
            FilesCompleted = 3,
        }
    }
    public sealed class QueryValue : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.QueryValue>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.QueryValue>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.QueryValue>
    {
        public const int BooleanValueFieldNumber = 3;
        public const int DoubleValueFieldNumber = 4;
        public const int NumberValueFieldNumber = 2;
        public const int TextValueFieldNumber = 1;
        public QueryValue() { }
        public QueryValue(Io.Axoniq.Axonserver.Grpc.Event.QueryValue other) { }
        public bool BooleanValue { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Event.QueryValue.DataOneofCase DataCase { get; }
        public double DoubleValue { get; set; }
        public bool HasBooleanValue { get; }
        public bool HasDoubleValue { get; }
        public bool HasNumberValue { get; }
        public bool HasTextValue { get; }
        public long NumberValue { get; set; }
        public string TextValue { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.QueryValue> Parser { get; }
        public int CalculateSize() { }
        public void ClearBooleanValue() { }
        public void ClearData() { }
        public void ClearDoubleValue() { }
        public void ClearNumberValue() { }
        public void ClearTextValue() { }
        public Io.Axoniq.Axonserver.Grpc.Event.QueryValue Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.QueryValue other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.QueryValue other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum DataOneofCase
        {
            None = 0,
            TextValue = 1,
            NumberValue = 2,
            BooleanValue = 3,
            DoubleValue = 4,
        }
    }
    public sealed class ReadHighestSequenceNrRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest>
    {
        public const int AggregateIdFieldNumber = 1;
        public const int FromSequenceNrFieldNumber = 3;
        public ReadHighestSequenceNrRequest() { }
        public ReadHighestSequenceNrRequest(Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest other) { }
        public string AggregateId { get; set; }
        public long FromSequenceNr { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ReadHighestSequenceNrResponse : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse>
    {
        public const int ToSequenceNrFieldNumber = 1;
        public ReadHighestSequenceNrResponse() { }
        public ReadHighestSequenceNrResponse(Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse other) { }
        public long ToSequenceNr { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.ReadHighestSequenceNrResponse other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class RescheduleEventRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest>
    {
        public const int EventFieldNumber = 3;
        public const int InstantFieldNumber = 2;
        public const int TokenFieldNumber = 1;
        public RescheduleEventRequest() { }
        public RescheduleEventRequest(Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest other) { }
        public Io.Axoniq.Axonserver.Grpc.Event.Event Event { get; set; }
        public long Instant { get; set; }
        public string Token { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.RescheduleEventRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class RowResponse : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.RowResponse>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.RowResponse>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.RowResponse>
    {
        public const int IdValuesFieldNumber = 1;
        public const int SortValuesFieldNumber = 2;
        public const int ValuesFieldNumber = 3;
        public RowResponse() { }
        public RowResponse(Io.Axoniq.Axonserver.Grpc.Event.RowResponse other) { }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Event.QueryValue> IdValues { get; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.Event.QueryValue> SortValues { get; }
        public Google.Protobuf.Collections.MapField<string, Io.Axoniq.Axonserver.Grpc.Event.QueryValue> Values { get; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.RowResponse> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.RowResponse Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.RowResponse other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.RowResponse other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ScheduleEventRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest>
    {
        public const int EventFieldNumber = 2;
        public const int InstantFieldNumber = 1;
        public ScheduleEventRequest() { }
        public ScheduleEventRequest(Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest other) { }
        public Io.Axoniq.Axonserver.Grpc.Event.Event Event { get; set; }
        public long Instant { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.ScheduleEventRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class ScheduleToken : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken>
    {
        public const int TokenFieldNumber = 1;
        public ScheduleToken() { }
        public ScheduleToken(Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken other) { }
        public string Token { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.ScheduleToken other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class StartTransformationRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest>
    {
        public const int DescriptionFieldNumber = 1;
        public StartTransformationRequest() { }
        public StartTransformationRequest(Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest other) { }
        public string Description { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.StartTransformationRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class TrackingToken : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.TrackingToken>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.TrackingToken>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.TrackingToken>
    {
        public const int TokenFieldNumber = 1;
        public TrackingToken() { }
        public TrackingToken(Io.Axoniq.Axonserver.Grpc.Event.TrackingToken other) { }
        public long Token { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.TrackingToken> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.TrackingToken Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.TrackingToken other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.TrackingToken other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class TransformRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.TransformRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.TransformRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.TransformRequest>
    {
        public const int DeleteEventFieldNumber = 4;
        public const int ReplaceEventFieldNumber = 3;
        public const int SequenceFieldNumber = 2;
        public const int TransformationIdFieldNumber = 1;
        public TransformRequest() { }
        public TransformRequest(Io.Axoniq.Axonserver.Grpc.Event.TransformRequest other) { }
        public Io.Axoniq.Axonserver.Grpc.Event.DeletedEvent DeleteEvent { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Event.TransformedEvent ReplaceEvent { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Event.TransformRequest.RequestOneofCase RequestCase { get; }
        public long Sequence { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Event.TransformationId TransformationId { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.TransformRequest> Parser { get; }
        public int CalculateSize() { }
        public void ClearRequest() { }
        public Io.Axoniq.Axonserver.Grpc.Event.TransformRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.TransformRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.TransformRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum RequestOneofCase
        {
            None = 0,
            ReplaceEvent = 3,
            DeleteEvent = 4,
        }
    }
    public sealed class TransformRequestAck : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.TransformRequestAck>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.TransformRequestAck>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.TransformRequestAck>
    {
        public const int SequenceFieldNumber = 1;
        public TransformRequestAck() { }
        public TransformRequestAck(Io.Axoniq.Axonserver.Grpc.Event.TransformRequestAck other) { }
        public long Sequence { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.TransformRequestAck> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.TransformRequestAck Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.TransformRequestAck other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.TransformRequestAck other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class Transformation : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.Transformation>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.Transformation>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.Transformation>
    {
        public const int AppliedAtFieldNumber = 6;
        public const int ApplyRequesterFieldNumber = 7;
        public const int ContextFieldNumber = 4;
        public const int DescriptionFieldNumber = 5;
        public const int SequenceFieldNumber = 3;
        public const int StateFieldNumber = 2;
        public const int TransformationIdFieldNumber = 1;
        public const int VersionFieldNumber = 8;
        public Transformation() { }
        public Transformation(Io.Axoniq.Axonserver.Grpc.Event.Transformation other) { }
        public long AppliedAt { get; set; }
        public string ApplyRequester { get; set; }
        public string Context { get; set; }
        public string Description { get; set; }
        public long Sequence { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Event.TransformationState State { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Event.TransformationId TransformationId { get; set; }
        public int Version { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.Transformation> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.Transformation Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.Transformation other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.Transformation other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class TransformationId : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.TransformationId>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.TransformationId>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.TransformationId>
    {
        public const int IdFieldNumber = 1;
        public TransformationId() { }
        public TransformationId(Io.Axoniq.Axonserver.Grpc.Event.TransformationId other) { }
        public string Id { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.TransformationId> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.TransformationId Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.TransformationId other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.TransformationId other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public enum TransformationState
    {
        [Google.Protobuf.Reflection.OriginalName("ACTIVE")]
        Active = 0,
        [Google.Protobuf.Reflection.OriginalName("CANCELLED")]
        Cancelled = 1,
        [Google.Protobuf.Reflection.OriginalName("APPLYING")]
        Applying = 2,
        [Google.Protobuf.Reflection.OriginalName("APPLIED")]
        Applied = 3,
    }
    public sealed class TransformedEvent : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Event.TransformedEvent>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Event.TransformedEvent>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Event.TransformedEvent>
    {
        public const int EventFieldNumber = 2;
        public const int TokenFieldNumber = 1;
        public TransformedEvent() { }
        public TransformedEvent(Io.Axoniq.Axonserver.Grpc.Event.TransformedEvent other) { }
        public Io.Axoniq.Axonserver.Grpc.Event.Event Event { get; set; }
        public long Token { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Event.TransformedEvent> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Event.TransformedEvent Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Event.TransformedEvent other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Event.TransformedEvent other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
}
namespace Io.Axoniq.Axonserver.Grpc.Query
{
    public sealed class QueryComplete : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QueryComplete>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QueryComplete>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QueryComplete>
    {
        public const int MessageIdFieldNumber = 1;
        public const int RequestIdFieldNumber = 2;
        public QueryComplete() { }
        public QueryComplete(Io.Axoniq.Axonserver.Grpc.Query.QueryComplete other) { }
        public string MessageId { get; set; }
        public string RequestId { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QueryComplete> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryComplete Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QueryComplete other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QueryComplete other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class QueryFlowControl : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QueryFlowControl>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QueryFlowControl>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QueryFlowControl>
    {
        public const int PermitsFieldNumber = 2;
        public const int QueryReferenceFieldNumber = 1;
        public QueryFlowControl() { }
        public QueryFlowControl(Io.Axoniq.Axonserver.Grpc.Query.QueryFlowControl other) { }
        public long Permits { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryReference QueryReference { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QueryFlowControl> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryFlowControl Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QueryFlowControl other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QueryFlowControl other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class QueryProviderInbound : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound>
    {
        public const int AckFieldNumber = 1;
        public const int InstructionIdFieldNumber = 4;
        public const int QueryCancelFieldNumber = 5;
        public const int QueryFieldNumber = 2;
        public const int QueryFlowControlFieldNumber = 6;
        public const int SubscriptionQueryRequestFieldNumber = 3;
        public QueryProviderInbound() { }
        public QueryProviderInbound(Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound other) { }
        public Io.Axoniq.Axonserver.Grpc.InstructionAck Ack { get; set; }
        public string InstructionId { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryRequest Query { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryReference QueryCancel { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryFlowControl QueryFlowControl { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound.RequestOneofCase RequestCase { get; }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest SubscriptionQueryRequest { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound> Parser { get; }
        public int CalculateSize() { }
        public void ClearRequest() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum RequestOneofCase
        {
            None = 0,
            Ack = 1,
            Query = 2,
            SubscriptionQueryRequest = 3,
            QueryCancel = 5,
            QueryFlowControl = 6,
        }
    }
    public sealed class QueryProviderOutbound : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound>
    {
        public const int AckFieldNumber = 7;
        public const int FlowControlFieldNumber = 3;
        public const int InstructionIdFieldNumber = 8;
        public const int QueryCompleteFieldNumber = 5;
        public const int QueryResponseFieldNumber = 4;
        public const int SubscribeFieldNumber = 1;
        public const int SubscriptionQueryResponseFieldNumber = 6;
        public const int UnsubscribeFieldNumber = 2;
        public QueryProviderOutbound() { }
        public QueryProviderOutbound(Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound other) { }
        public Io.Axoniq.Axonserver.Grpc.InstructionAck Ack { get; set; }
        public Io.Axoniq.Axonserver.Grpc.FlowControl FlowControl { get; set; }
        public string InstructionId { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryComplete QueryComplete { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryResponse QueryResponse { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound.RequestOneofCase RequestCase { get; }
        public Io.Axoniq.Axonserver.Grpc.Query.QuerySubscription Subscribe { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse SubscriptionQueryResponse { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QuerySubscription Unsubscribe { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound> Parser { get; }
        public int CalculateSize() { }
        public void ClearRequest() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum RequestOneofCase
        {
            None = 0,
            Subscribe = 1,
            Unsubscribe = 2,
            FlowControl = 3,
            QueryResponse = 4,
            QueryComplete = 5,
            SubscriptionQueryResponse = 6,
            Ack = 7,
        }
    }
    public sealed class QueryReference : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QueryReference>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QueryReference>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QueryReference>
    {
        public const int RequestIdFieldNumber = 1;
        public QueryReference() { }
        public QueryReference(Io.Axoniq.Axonserver.Grpc.Query.QueryReference other) { }
        public string RequestId { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QueryReference> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryReference Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QueryReference other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QueryReference other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class QueryReflection
    {
        public static Google.Protobuf.Reflection.FileDescriptor Descriptor { get; }
    }
    public sealed class QueryRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QueryRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QueryRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QueryRequest>
    {
        public const int ClientIdFieldNumber = 8;
        public const int ComponentNameFieldNumber = 9;
        public const int MessageIdentifierFieldNumber = 1;
        public const int MetaDataFieldNumber = 5;
        public const int PayloadFieldNumber = 4;
        public const int ProcessingInstructionsFieldNumber = 7;
        public const int QueryFieldNumber = 2;
        public const int ResponseTypeFieldNumber = 6;
        public const int TimestampFieldNumber = 3;
        public QueryRequest() { }
        public QueryRequest(Io.Axoniq.Axonserver.Grpc.Query.QueryRequest other) { }
        public string ClientId { get; set; }
        public string ComponentName { get; set; }
        public string MessageIdentifier { get; set; }
        public Google.Protobuf.Collections.MapField<string, Io.Axoniq.Axonserver.Grpc.MetaDataValue> MetaData { get; }
        public Io.Axoniq.Axonserver.Grpc.SerializedObject Payload { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.ProcessingInstruction> ProcessingInstructions { get; }
        public string Query { get; set; }
        public Io.Axoniq.Axonserver.Grpc.SerializedObject ResponseType { get; set; }
        public long Timestamp { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QueryRequest> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QueryRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QueryRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class QueryResponse : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QueryResponse>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QueryResponse>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QueryResponse>
    {
        public const int ErrorCodeFieldNumber = 2;
        public const int ErrorMessageFieldNumber = 3;
        public const int MessageIdentifierFieldNumber = 1;
        public const int MetaDataFieldNumber = 5;
        public const int PayloadFieldNumber = 4;
        public const int ProcessingInstructionsFieldNumber = 6;
        public const int RequestIdentifierFieldNumber = 7;
        public QueryResponse() { }
        public QueryResponse(Io.Axoniq.Axonserver.Grpc.Query.QueryResponse other) { }
        public string ErrorCode { get; set; }
        public Io.Axoniq.Axonserver.Grpc.ErrorMessage ErrorMessage { get; set; }
        public string MessageIdentifier { get; set; }
        public Google.Protobuf.Collections.MapField<string, Io.Axoniq.Axonserver.Grpc.MetaDataValue> MetaData { get; }
        public Io.Axoniq.Axonserver.Grpc.SerializedObject Payload { get; set; }
        public Google.Protobuf.Collections.RepeatedField<Io.Axoniq.Axonserver.Grpc.ProcessingInstruction> ProcessingInstructions { get; }
        public string RequestIdentifier { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QueryResponse> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryResponse Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QueryResponse other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QueryResponse other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public static class QueryService
    {
        public static Google.Protobuf.Reflection.ServiceDescriptor Descriptor { get; }
        public class QueryServiceClient : Grpc.Core.ClientBase<Io.Axoniq.Axonserver.Grpc.Query.QueryService.QueryServiceClient>
        {
            protected QueryServiceClient() { }
            public QueryServiceClient(Grpc.Core.CallInvoker callInvoker) { }
            public QueryServiceClient(Grpc.Core.ChannelBase channel) { }
            protected QueryServiceClient(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            protected override Io.Axoniq.Axonserver.Grpc.Query.QueryService.QueryServiceClient NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration configuration) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound, Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound> OpenStream(Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Query.QueryProviderOutbound, Io.Axoniq.Axonserver.Grpc.Query.QueryProviderInbound> OpenStream(Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Query.QueryResponse> Query(Io.Axoniq.Axonserver.Grpc.Query.QueryRequest request, Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncServerStreamingCall<Io.Axoniq.Axonserver.Grpc.Query.QueryResponse> Query(Io.Axoniq.Axonserver.Grpc.Query.QueryRequest request, Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest, Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse> Subscription(Grpc.Core.CallOptions options) { }
            public virtual Grpc.Core.AsyncDuplexStreamingCall<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest, Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse> Subscription(Grpc.Core.Metadata headers = null, System.DateTime? deadline = default, System.Threading.CancellationToken cancellationToken = default) { }
        }
    }
    public sealed class QuerySubscription : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QuerySubscription>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QuerySubscription>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QuerySubscription>
    {
        public const int ClientIdFieldNumber = 5;
        public const int ComponentNameFieldNumber = 4;
        public const int MessageIdFieldNumber = 1;
        public const int QueryFieldNumber = 2;
        public const int ResultNameFieldNumber = 3;
        public QuerySubscription() { }
        public QuerySubscription(Io.Axoniq.Axonserver.Grpc.Query.QuerySubscription other) { }
        public string ClientId { get; set; }
        public string ComponentName { get; set; }
        public string MessageId { get; set; }
        public string Query { get; set; }
        public string ResultName { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QuerySubscription> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QuerySubscription Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QuerySubscription other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QuerySubscription other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class QueryUpdate : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate>
    {
        public const int ClientIdFieldNumber = 5;
        public const int ComponentNameFieldNumber = 6;
        public const int ErrorCodeFieldNumber = 7;
        public const int ErrorMessageFieldNumber = 8;
        public const int MessageIdentifierFieldNumber = 2;
        public const int MetaDataFieldNumber = 4;
        public const int PayloadFieldNumber = 3;
        public QueryUpdate() { }
        public QueryUpdate(Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate other) { }
        public string ClientId { get; set; }
        public string ComponentName { get; set; }
        public string ErrorCode { get; set; }
        public Io.Axoniq.Axonserver.Grpc.ErrorMessage ErrorMessage { get; set; }
        public string MessageIdentifier { get; set; }
        public Google.Protobuf.Collections.MapField<string, Io.Axoniq.Axonserver.Grpc.MetaDataValue> MetaData { get; }
        public Io.Axoniq.Axonserver.Grpc.SerializedObject Payload { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class QueryUpdateComplete : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateComplete>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateComplete>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateComplete>
    {
        public const int ClientIdFieldNumber = 2;
        public const int ComponentNameFieldNumber = 3;
        public QueryUpdateComplete() { }
        public QueryUpdateComplete(Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateComplete other) { }
        public string ClientId { get; set; }
        public string ComponentName { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateComplete> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateComplete Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateComplete other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateComplete other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class QueryUpdateCompleteExceptionally : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateCompleteExceptionally>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateCompleteExceptionally>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateCompleteExceptionally>
    {
        public const int ClientIdFieldNumber = 2;
        public const int ComponentNameFieldNumber = 3;
        public const int ErrorCodeFieldNumber = 5;
        public const int ErrorMessageFieldNumber = 6;
        public QueryUpdateCompleteExceptionally() { }
        public QueryUpdateCompleteExceptionally(Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateCompleteExceptionally other) { }
        public string ClientId { get; set; }
        public string ComponentName { get; set; }
        public string ErrorCode { get; set; }
        public Io.Axoniq.Axonserver.Grpc.ErrorMessage ErrorMessage { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateCompleteExceptionally> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateCompleteExceptionally Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateCompleteExceptionally other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateCompleteExceptionally other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class SubscriptionQuery : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery>
    {
        public const int NumberOfPermitsFieldNumber = 2;
        public const int QueryRequestFieldNumber = 3;
        public const int SubscriptionIdentifierFieldNumber = 1;
        public const int UpdateResponseTypeFieldNumber = 4;
        public SubscriptionQuery() { }
        public SubscriptionQuery(Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery other) { }
        public long NumberOfPermits { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryRequest QueryRequest { get; set; }
        public string SubscriptionIdentifier { get; set; }
        public Io.Axoniq.Axonserver.Grpc.SerializedObject UpdateResponseType { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery> Parser { get; }
        public int CalculateSize() { }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
    }
    public sealed class SubscriptionQueryRequest : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest>
    {
        public const int FlowControlFieldNumber = 4;
        public const int GetInitialResultFieldNumber = 3;
        public const int SubscribeFieldNumber = 1;
        public const int UnsubscribeFieldNumber = 2;
        public SubscriptionQueryRequest() { }
        public SubscriptionQueryRequest(Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest other) { }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery FlowControl { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery GetInitialResult { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest.RequestOneofCase RequestCase { get; }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery Subscribe { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQuery Unsubscribe { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest> Parser { get; }
        public int CalculateSize() { }
        public void ClearRequest() { }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryRequest other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum RequestOneofCase
        {
            None = 0,
            Subscribe = 1,
            Unsubscribe = 2,
            GetInitialResult = 3,
            FlowControl = 4,
        }
    }
    public sealed class SubscriptionQueryResponse : Google.Protobuf.IBufferMessage, Google.Protobuf.IDeepCloneable<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse>, Google.Protobuf.IMessage, Google.Protobuf.IMessage<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse>, System.IEquatable<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse>
    {
        public const int CompleteExceptionallyFieldNumber = 6;
        public const int CompleteFieldNumber = 5;
        public const int InitialResultFieldNumber = 3;
        public const int MessageIdentifierFieldNumber = 1;
        public const int SubscriptionIdentifierFieldNumber = 2;
        public const int UpdateFieldNumber = 4;
        public SubscriptionQueryResponse() { }
        public SubscriptionQueryResponse(Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse other) { }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateComplete Complete { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryUpdateCompleteExceptionally CompleteExceptionally { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryResponse InitialResult { get; set; }
        public string MessageIdentifier { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse.ResponseOneofCase ResponseCase { get; }
        public string SubscriptionIdentifier { get; set; }
        public Io.Axoniq.Axonserver.Grpc.Query.QueryUpdate Update { get; set; }
        public static Google.Protobuf.Reflection.MessageDescriptor Descriptor { get; }
        public static Google.Protobuf.MessageParser<Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse> Parser { get; }
        public int CalculateSize() { }
        public void ClearResponse() { }
        public Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse Clone() { }
        public bool Equals(Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse other) { }
        public override bool Equals(object other) { }
        public override int GetHashCode() { }
        public void MergeFrom(Google.Protobuf.CodedInputStream input) { }
        public void MergeFrom(Io.Axoniq.Axonserver.Grpc.Query.SubscriptionQueryResponse other) { }
        public override string ToString() { }
        public void WriteTo(Google.Protobuf.CodedOutputStream output) { }
        public enum ResponseOneofCase
        {
            None = 0,
            InitialResult = 3,
            Update = 4,
            Complete = 5,
            CompleteExceptionally = 6,
        }
    }
}